<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
        <calculation class='tableau' formula='&quot;week&quot;' />
        <members>
          <member value='&quot;day&quot;' />
          <member value='&quot;week&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='Data (london_bikes)' inline='true' name='federated.0j17ukk0ymezpx10gthqs09ix6qv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes' name='excel-direct.0c7pp1q1decpzl1926xuu0d7lvtc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lekai/Downloads/london_bikes.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0c7pp1q1decpzl1926xuu0d7lvtc' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0c7pp1q1decpzl1926xuu0d7lvtc' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_real_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_real_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temp_real_C</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_feels_like_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_feels_like_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temp_feels_like_C</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity_percent]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>humidity_percent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_kph]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>wind_speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_DDA2C8A2C209408093E980454C6C7890]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Humidity Percentage' datatype='real' name='[Calculation_1973421062890242050]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[humidity_percent]*100' />
      </column>
      <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1973421062891139075]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
      </column>
      <column caption='Min Month' datatype='date' name='[Calculation_1973421062892212228]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{Min(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
      </column>
      <column caption='In range' datatype='boolean' name='[Calculation_1973421062895308806]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1973421062891139075]&gt;=[Calculation_1973421062892212228]&#13;&#10;AND&#13;&#10;[Calculation_1973421062891139075]&lt;=[Min Month (copy)_1973421062892519429]' />
      </column>
      <column caption='In range rides' datatype='integer' name='[Calculation_1973421062896545799]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{SUM(int([Calculation_1973421062895308806])*[count])}' />
      </column>
      <column caption='Max Month' datatype='date' name='[Min Month (copy)_1973421062892519429]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
      </column>
      <column aggregation='None' caption='Wind(kph)' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_DDA2C8A2C209408093E980454C6C7890]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Humidity Percent' datatype='real' name='[humidity_percent]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
      </column>
      <column caption='temp feels like C' datatype='real' name='[temp_feels_like_C]' role='measure' type='quantitative' />
      <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1973421062895308806]' derivation='Attribute' name='[attr:Calculation_1973421062895308806:nk]' pivot='key' type='nominal' />
      <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1973421062891139075]' derivation='None' name='[none:Calculation_1973421062891139075:ok]' pivot='key' type='ordinal' />
      <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
      <group caption='Moving Average Period Set' name='[Moving Average Period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='#2015-01-04#' function='range' level='[none:Calculation_1973421062891139075:ok]' to='#2016-03-01#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Tooltip (Min Month,Max Month,Wind(kph),Temp C)' hidden='true' name='[Tooltip (Min Month,Max Month,Wind(kph),Temp C)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1973421062892212228]' />
          <groupfilter function='level-members' level='[Min Month (copy)_1973421062892519429]' />
          <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
          <groupfilter function='level-members' level='[temp real C (bin)]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Moving Average Period,Min Month,Max Month)' hidden='true' name='[Tooltip (Moving Average Period,Min Month,Max Month)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1973421062891139075:ok]' />
          <groupfilter function='level-members' level='[Calculation_1973421062892212228]' />
          <groupfilter function='level-members' level='[Min Month (copy)_1973421062892519429]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Calculation_1973421062895308806:nk]' type='palette'>
            <map to='#1f580a'>
              <bucket>true</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#aa007f'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:time:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:weather:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Broken Clouds&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Rain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowfall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cloudy&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Scattered Clouds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='time' />
        <field-sort-custom-order field='count' />
        <field-sort-custom-order field='temp_real_C' />
        <field-sort-custom-order field='temp_feels_like_C' />
        <field-sort-custom-order field='humidity_percent' />
        <field-sort-custom-order field='Calculation_1973421062890242050' />
        <field-sort-custom-order field='wind_speed_kph' />
        <field-sort-custom-order field='weather' />
        <field-sort-custom-order field='is_holiday' />
        <field-sort-custom-order field='is_weekend' />
        <field-sort-custom-order field='season' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_DDA2C8A2C209408093E980454C6C7890'>
            <properties context=''>
              <relation connection='excel-direct.0c7pp1q1decpzl1926xuu0d7lvtc' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='real' name='temp_real_C' ordinal='3' />
                  <column datatype='real' name='temp_feels_like_C' ordinal='4' />
                  <column datatype='real' name='humidity_percent' ordinal='5' />
                  <column datatype='real' name='wind_speed_kph' ordinal='6' />
                  <column datatype='string' name='weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='season' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action2_737E1B35FE324F2CA5E7B9E7E6209245]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Moving Average' />
      <command command='tsc:brush'>
        <param name='field-captions' value='ATTR(In range)' />
        <param name='target' value='Moving Average' />
      </command>
    </action>
    <edit-group-action caption='Update Moving Average Period Set' name='[Action1_E7193B3A06204BD9B4B60387974A3A92]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Moving Average' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Moving Average Period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Heatmap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#005500'><![CDATA[Temperature vs Wind Speed between <[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]> and <[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]>]]></run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes)' name='federated.0j17ukk0ymezpx10gthqs09ix6qv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0j17ukk0ymezpx10gthqs09ix6qv'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1973421062891139075]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1973421062892212228]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{Min(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
            </column>
            <column caption='In range' datatype='boolean' name='[Calculation_1973421062895308806]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1973421062891139075]&gt;=[Calculation_1973421062892212228]&#13;&#10;AND&#13;&#10;[Calculation_1973421062891139075]&lt;=[Min Month (copy)_1973421062892519429]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1973421062892519429]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
            </column>
            <column aggregation='None' caption='Wind(kph)' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1973421062891139075]' derivation='None' name='[none:Calculation_1973421062891139075:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1973421062892212228]' derivation='None' name='[none:Calculation_1973421062892212228:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1973421062895308806]' derivation='None' name='[none:Calculation_1973421062895308806:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_1973421062892519429]' derivation='None' name='[none:Min Month (copy)_1973421062892519429:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Speed Kph (bin)]' derivation='None' name='[none:Wind Speed Kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[temp real C (bin)]' derivation='None' name='[none:temp real C (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]'>
            <groupfilter function='member' level='[none:Calculation_1973421062895308806:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#555555' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='color' data-class='subtotal' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:temp real C (bin):ok]' value='#005500' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:temp real C (bin):ok]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Wind Speed Kph (bin):ok]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:temp real C (bin):ok]' value='#005500' />
            <format attr='color' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Wind Speed Kph (bin):ok]' value='#005500' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5dce4</color>
                <color>#d9c9d8</color>
                <color>#cdb6cc</color>
                <color>#c2a4c0</color>
                <color>#b693b4</color>
                <color>#aa83a8</color>
                <color>#9f749c</color>
                <color>#936690</color>
                <color>#875984</color>
                <color>#7c4d79</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#666666' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#d4d4d4' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='fill-color' id='refline16' value='#e6e6e6' />
            <format attr='line-visibility' id='refline16' value='on' />
            <format attr='line-pattern-only' id='refline16' value='dotted' />
            <format attr='line-visibility' id='refline20' value='on' />
            <format attr='line-pattern-only' id='refline20' value='dotted' />
            <format attr='line-visibility' id='refline22' value='on' />
            <format attr='line-pattern-only' id='refline22' value='dotted' />
            <format attr='fill-color' id='refline22' value='#f5eddc' />
            <format attr='stroke-color' id='refline22' value='#005500' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]' />
              <text column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]' />
              <lod column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]' />
              <lod column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#005500'><![CDATA[Temp C:	<[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:temp real C (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#005500'><![CDATA[Wind(kph):	<[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Wind Speed Kph (bin):ok]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#005500'><![CDATA[<Sheet name="Weather" maxwidth="400" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#005500'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#000000'>&lt;</run>
                <run bold='true' fontcolor='#000000'>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]</run>
                <run bold='true' fontcolor='#000000'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:temp real C (bin):ok]</rows>
        <cols>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Wind Speed Kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Wind Speed Kph (bin)]</column>
          <column>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[temp real C (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{A5C2378B-ECF7-41DC-8879-692701DC26E4}' />
    </worksheet>
    <worksheet name='Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes)' name='federated.0j17ukk0ymezpx10gthqs09ix6qv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0j17ukk0ymezpx10gthqs09ix6qv'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1973421062891139075]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1973421062892212228]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{Min(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
            </column>
            <column caption='In range' datatype='boolean' name='[Calculation_1973421062895308806]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1973421062891139075]&gt;=[Calculation_1973421062892212228]&#13;&#10;AND&#13;&#10;[Calculation_1973421062891139075]&lt;=[Min Month (copy)_1973421062892519429]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1973421062892519429]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
            </column>
            <column aggregation='None' caption='Wind(kph)' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1973421062891139075]' derivation='None' name='[none:Calculation_1973421062891139075:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1973421062892212228]' derivation='None' name='[none:Calculation_1973421062892212228:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1973421062895308806]' derivation='None' name='[none:Calculation_1973421062895308806:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_1973421062892519429]' derivation='None' name='[none:Min Month (copy)_1973421062892519429:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Tooltip (Min Month,Max Month,Wind(kph),Temp C)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1973421062892212228]' />
              <groupfilter function='level-members' level='[Min Month (copy)_1973421062892519429]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[temp real C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1973421062891139075:ok]' />
              <groupfilter function='level-members' level='[Calculation_1973421062892212228]' />
              <groupfilter function='level-members' level='[Min Month (copy)_1973421062892519429]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]'>
            <groupfilter function='member' level='[none:Calculation_1973421062895308806:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]</column>
            <column>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Tooltip (Min Month,Max Month,Wind(kph),Temp C)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#555555' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#666666' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#d4d4d4' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='fill-color' id='refline16' value='#e6e6e6' />
            <format attr='line-visibility' id='refline16' value='on' />
            <format attr='line-pattern-only' id='refline16' value='dotted' />
            <format attr='line-visibility' id='refline20' value='on' />
            <format attr='line-pattern-only' id='refline20' value='dotted' />
            <format attr='line-visibility' id='refline22' value='on' />
            <format attr='line-pattern-only' id='refline22' value='dotted' />
            <format attr='fill-color' id='refline22' value='#f5eddc' />
            <format attr='stroke-color' id='refline22' value='#005500' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[hr:time:ok]' />
              <text column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]' />
              <lod column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]' />
              <lod column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]</run>
                <run fontcolor='#000000'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[hr:time:ok]</rows>
        <cols>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{752BF5E4-26AA-4951-B029-F86BED259050}' />
    </worksheet>
    <worksheet name='Moving Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#005500'>&lt;</run>
            <run bold='true' fontcolor='#005500'>[Parameters].[Parameter 2]</run>
            <run bold='true' fontcolor='#005500'>&gt; &lt;</run>
            <run bold='true' fontcolor='#005500'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#005500'>&gt; moving average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes)' name='federated.0j17ukk0ymezpx10gthqs09ix6qv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
            <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0j17ukk0ymezpx10gthqs09ix6qv'>
            <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1973421062891139075]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1973421062892212228]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{Min(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
            </column>
            <column caption='In range' datatype='boolean' name='[Calculation_1973421062895308806]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1973421062891139075]&gt;=[Calculation_1973421062892212228]&#13;&#10;AND&#13;&#10;[Calculation_1973421062891139075]&lt;=[Min Month (copy)_1973421062892519429]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1973421062892519429]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
            </column>
            <column-instance column='[Calculation_1973421062895308806]' derivation='Attribute' name='[attr:Calculation_1973421062895308806:nk]' pivot='key' type='nominal' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1973421062891139075]' derivation='None' name='[none:Calculation_1973421062891139075:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1973421062891139075]' derivation='None' name='[none:Calculation_1973421062891139075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1973421062892212228]' derivation='None' name='[none:Calculation_1973421062892212228:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_1973421062892519429]' derivation='None' name='[none:Min Month (copy)_1973421062892519429:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]' field-type='quantitative' max='#2017-06-29#' min='#2014-06-19#' range-type='fixed' scope='cols' type='space' />
            <format attr='width' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' value='36' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#555555' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#005500' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]' value='#005500' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#005500' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#666666' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='background-color' id='refline0' value='#ffffff00' />
            <format attr='background-color' id='refline4' value='#ffffff00' />
            <format attr='background-color' id='refline12' value='#ffffff00' />
            <format attr='background-color' id='refline16' value='#ffffff00' />
            <format attr='background-color' id='refline20' value='#ffffff00' />
            <format attr='background-color' id='refline22' value='#ffffff00' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#d4d4d4' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='fill-color' id='refline16' value='#e6e6e6' />
            <format attr='line-visibility' id='refline16' value='on' />
            <format attr='line-pattern-only' id='refline16' value='dotted' />
            <format attr='line-visibility' id='refline20' value='on' />
            <format attr='line-pattern-only' id='refline20' value='dotted' />
            <format attr='line-visibility' id='refline22' value='on' />
            <format attr='line-pattern-only' id='refline22' value='dotted' />
            <format attr='fill-color' id='refline22' value='#f5eddc' />
            <format attr='stroke-color' id='refline22' value='#005500' />
            <format attr='fill-color' id='refline4' value='#ffffff' />
            <format attr='fill-color' id='refline24' value='#ffffff' />
            <format attr='fill-color' id='refline18' value='#ffffff' />
            <format attr='fill-color' id='refline14' value='#ffffff' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]' value='#005500' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[attr:Calculation_1973421062895308806:nk]' />
              <lod column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]' />
              <lod column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='min' id='refline10' label-type='none' paired-id='refline11' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' z-order='4' />
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='max' id='refline11' label-type='none' paired-id='refline10' scope='per-table' symmetric='false' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' z-order='5' />
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]' enable-instant-analytics='false' formula='min' id='refline12' label-type='none' paired-id='refline13' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]' z-order='6' />
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]' enable-instant-analytics='false' formula='max' id='refline13' label-type='none' paired-id='refline12' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]' z-order='7' />
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]' enable-instant-analytics='false' formula='min' id='refline16' label-type='none' paired-id='refline17' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]' z-order='8' />
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]' enable-instant-analytics='false' formula='max' id='refline17' label-type='none' paired-id='refline16' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]' z-order='9' />
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='min' id='refline2' label-type='automatic' paired-id='refline3' scope='per-pane' symmetric='false' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' z-order='1' />
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]' enable-instant-analytics='true' formula='min' id='refline20' label-type='none' paired-id='refline21' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]' z-order='10' />
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]' enable-instant-analytics='true' formula='max' id='refline21' label-type='none' paired-id='refline20' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]' z-order='11' />
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='max' id='refline3' label-type='automatic' paired-id='refline2' scope='per-pane' symmetric='false' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' z-order='2' />
            <reference-line axis-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='automatic' scope='per-pane' value-column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]' z-order='3' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#005500'>Date:&#9;</run>
                <run bold='true' fontcolor='#005500'><![CDATA[<[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#005500'>Moving Average Rides:&#9;</run>
                <run bold='true' fontcolor='#005500'><![CDATA[<[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#005500'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#005500'><![CDATA[<Sheet name="Weather" maxwidth="400" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1384' />
                <format attr='maxwidth' value='1384' />
                <format attr='minheight' value='728' />
                <format attr='maxheight' value='728' />
                <format attr='aspect' value='0' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[usr:Calculation1:qk]</rows>
        <cols>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]</cols>
      </table>
      <simple-id uuid='{20FAD8E7-E64C-4CBF-BAE7-86B3D88F408F}' />
    </worksheet>
    <worksheet name='Total Rides'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#005500' fontsize='22'>London Bike Rides</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='22'>Æ </run>
            <run fontcolor='#005500'><![CDATA[between <[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]> and <[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]>]]></run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes)' name='federated.0j17ukk0ymezpx10gthqs09ix6qv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0j17ukk0ymezpx10gthqs09ix6qv'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1973421062891139075]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1973421062892212228]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{Min(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
            </column>
            <column caption='In range' datatype='boolean' name='[Calculation_1973421062895308806]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1973421062891139075]&gt;=[Calculation_1973421062892212228]&#13;&#10;AND&#13;&#10;[Calculation_1973421062891139075]&lt;=[Min Month (copy)_1973421062892519429]' />
            </column>
            <column caption='In range rides' datatype='integer' name='[Calculation_1973421062896545799]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{SUM(int([Calculation_1973421062895308806])*[count])}' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1973421062892519429]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1973421062891139075]' derivation='None' name='[none:Calculation_1973421062891139075:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1973421062892212228]' derivation='None' name='[none:Calculation_1973421062892212228:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1973421062895308806]' derivation='None' name='[none:Calculation_1973421062895308806:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_1973421062892519429]' derivation='None' name='[none:Min Month (copy)_1973421062892519429:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1973421062896545799]' derivation='Sum' name='[sum:Calculation_1973421062896545799:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]'>
            <groupfilter function='member' level='[none:Calculation_1973421062895308806:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' value='#005500' />
            <format attr='color' data-class='total' value='#005500' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' value='#005500' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#005500' />
            <format attr='color' scope='rows' value='#005500' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#666666' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#d4d4d4' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='fill-color' id='refline16' value='#e6e6e6' />
            <format attr='line-visibility' id='refline16' value='on' />
            <format attr='line-pattern-only' id='refline16' value='dotted' />
            <format attr='line-visibility' id='refline20' value='on' />
            <format attr='line-pattern-only' id='refline20' value='dotted' />
            <format attr='line-visibility' id='refline22' value='on' />
            <format attr='line-pattern-only' id='refline22' value='dotted' />
            <format attr='fill-color' id='refline22' value='#f5eddc' />
            <format attr='stroke-color' id='refline22' value='#005500' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:Calculation_1973421062896545799:qk]' />
              <lod column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]' />
              <lod column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#005500' fontsize='22'>&lt;</run>
                <run bold='true' fontcolor='#005500' fontsize='22'>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:Calculation_1973421062896545799:qk]</run>
                <run bold='true' fontcolor='#005500' fontsize='22'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C5EAF4C2-2506-4895-AA7A-85843DDBBE2F}' />
    </worksheet>
    <worksheet name='Weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes)' name='federated.0j17ukk0ymezpx10gthqs09ix6qv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0j17ukk0ymezpx10gthqs09ix6qv'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1973421062891139075]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1973421062892212228]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{Min(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
            </column>
            <column caption='In range' datatype='boolean' name='[Calculation_1973421062895308806]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1973421062891139075]&gt;=[Calculation_1973421062892212228]&#13;&#10;AND&#13;&#10;[Calculation_1973421062891139075]&lt;=[Min Month (copy)_1973421062892519429]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1973421062892519429]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set] THEN[Calculation_1973421062891139075]END)}' />
            </column>
            <column aggregation='None' caption='Wind(kph)' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1973421062891139075]' derivation='None' name='[none:Calculation_1973421062891139075:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1973421062892212228]' derivation='None' name='[none:Calculation_1973421062892212228:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1973421062895308806]' derivation='None' name='[none:Calculation_1973421062895308806:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_1973421062892519429]' derivation='None' name='[none:Min Month (copy)_1973421062892519429:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Tooltip (Min Month,Max Month,Wind(kph),Temp C)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1973421062892212228]' />
              <groupfilter function='level-members' level='[Min Month (copy)_1973421062892519429]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[temp real C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1973421062891139075:ok]' />
              <groupfilter function='level-members' level='[Calculation_1973421062892212228]' />
              <groupfilter function='level-members' level='[Min Month (copy)_1973421062892519429]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]'>
            <groupfilter function='member' level='[none:Calculation_1973421062895308806:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:weather:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clear&quot;</bucket>
              <bucket>&quot;Scattered Clouds&quot;</bucket>
              <bucket>&quot;Broken Clouds&quot;</bucket>
              <bucket>&quot;Rain&quot;</bucket>
              <bucket>&quot;Cloudy&quot;</bucket>
              <bucket>&quot;Snowfall&quot;</bucket>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]</column>
            <column>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Tooltip (Min Month,Max Month,Wind(kph),Temp C)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#555555' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#666666' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#d4d4d4' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='fill-color' id='refline16' value='#e6e6e6' />
            <format attr='line-visibility' id='refline16' value='on' />
            <format attr='line-pattern-only' id='refline16' value='dotted' />
            <format attr='line-visibility' id='refline20' value='on' />
            <format attr='line-pattern-only' id='refline20' value='dotted' />
            <format attr='line-visibility' id='refline22' value='on' />
            <format attr='line-pattern-only' id='refline22' value='dotted' />
            <format attr='fill-color' id='refline22' value='#f5eddc' />
            <format attr='stroke-color' id='refline22' value='#005500' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:weather:nk]' />
              <text column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]' />
              <lod column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]' />
              <lod column='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:weather:nk]</rows>
        <cols>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{C7DC339C-1291-47B7-AA9A-E35C8B23EFBA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#005500' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
          <members>
            <member value='&quot;day&quot;' />
            <member value='&quot;week&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='8' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='6' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='45833' id='3' name='Total Rides' w='18887' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45833' id='5' name='Moving Average' w='79941' x='19473' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52083' id='13' name='Heatmap' w='98828' x='586' y='46875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7161' id='12' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14495' x='56003' y='1823' />
        <zone h='11068' id='11' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16325' x='70791' y='1823' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='20' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='45833' id='3' is-fixed='true' name='Total Rides' w='18887' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45833' id='5' is-fixed='true' name='Moving Average' w='79941' x='19473' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7161' id='12' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14495' x='56003' y='1823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11068' id='11' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16325' x='70791' y='1823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52083' id='13' is-fixed='true' name='Heatmap' w='98828' x='586' y='46875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1EC0D375-6409-4611-BF15-B858401D13C6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Moving Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[Moving Average Period Set]' type='setMembership' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[attr:Calculation_1973421062895308806:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062891139075:qk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B70448E6-C99D-4668-94A2-3F5AEBF15B74}' />
    </window>
    <window class='worksheet' name='Total Rides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[yr:Calculation_1973421062892212228:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0BD8F61-598A-4A2A-9040-0F4547304E49}' />
    </window>
    <window class='worksheet' name='Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Wind Speed Kph (bin):ok]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:temp real C (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A2C96C2-CEC4-4F95-9295-2CC2B48E6C20}' />
    </window>
    <window class='worksheet' name='Weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:weather:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[sum:count:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:weather:nk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[yr:Min Month (copy)_1973421062892519429:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{381C6ECC-4B6F-4D58-B46A-A2F96D1E857D}' />
    </window>
    <window class='worksheet' name='Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[hr:time:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[hr:time:ok]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062892212228:qk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Calculation_1973421062895308806:nk]</field>
            <field>[federated.0j17ukk0ymezpx10gthqs09ix6qv].[none:Min Month (copy)_1973421062892519429:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C8C0E95-A7A2-4790-9F27-45A8E7F9756C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Heatmap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Moving Average'>
          <zoom type='entire-view' />
          <highlight field='[federated.0j17ukk0ymezpx10gthqs09ix6qv].[attr:Calculation_1973421062895308806:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Rides' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2009620A-D4AD-4172-8654-9D7BBE20A798}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Heatmap' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9x5ccWXbm+TMz1zI8PLREBAJaJxKpVZHFIruKVUWyKbrZc8jTZ5pzZhbz
      P3A9q5npZW9mwQWriqWzqlIgIQJAaK21cBWutZsLU7PwSGQiE0BmOphMVsO/XYT5tSfsXbP7
      7v3evYJhGAZNNPGcwgRQLpdp6kETzyNEoLn4m3huIX7THWji9wkGh4EAmUSISDxHMBhkf3//
      c78KBAJE4wl2Dw4f+b+uVQmFo4DB9uY6qv7Nv3hN33QHmvh9gsBRJEK1xU1VzVApqzidVtZX
      FlEVldbuXmJHcfKFIkNtDuK5MtTKqLqGqurYPR52N3aIJZMMt9s4iGQY6Wv9RkfU/AI08ZXg
      t5tI10R0OYO9pY1cLkexKNPudbC7s0NL9wksJoFSRUOvyYQTOarlEj093cRiMbytHdTkAha7
      lWq58k0PB8EwDEOW5W+6H038nqBaSHOU17DpJRz+Hkq5NKIALruFiiGRjMVxuFyYhBqGYMFh
      EtjY2cHmamV4eJByqYKu1yilYviHzuNzWL7R8TQVoImvBRW5jMlqwyQJlIoFbA4XkigcXzUo
      Fku4XK5vtI/wDZhAlUqeQDr28O94Jkiu8mU+hQaxdIBwNvnwP7KcJiWXvlS7hWKSUDYBgK7V
      2I8ffIlNmEG2mMEwDDL5KMlSAQClVmL7aIeKqj1Z0jDIFDMYuspBbIdMuf6SSeYibIQ3SMnF
      p8jqZEpZ5HKGjfDGw35XKnn24gH0p3jt8sUEgXSs3u6nxlirFthPhHjakJPZMNF8BoBYJkxN
      1wEeGfsTOkwkeUBaLhJK7LIR3kC3WDBJAtlCDN1s/dTiBxAeLv6SnGYndoimGxylAhSqNQAU
      pcR+IsSTu1t/JgfJCIYBhVKS7PEcZ/Mx9pORJ8san6ylf3MF+OXUr9jYvsl2rkwpt8utrVV+
      NfXLLyFpUFFU3p/8ObIBhqHxm8kf8f7axBdLqgV+NP4uhXJdWW7P/4p0LsTv1mafKlcqxvi/
      fv3/UKtl+dXCfd6d+gU6IFdLoGT55cLoE2UTqX3+7/f+BzWljIHATyd+AYDVbCcUnGAtmXmi
      7EF4nv9x58dIkgVRSfDh+jwAoVSIw4MHzMWST5A0CKWPuDPzc3499y7RbJDfrc5iGAY/Hf8J
      uXIe7UmrQisTyeX42fi/IBeC/L/v/nfCpTKaVuTdudt8MPNLqvrjRauVDOlKhZ+M/wyH1c3o
      4u8oqRqaKvOLO/+dO4HwE8darMgkojN8sHiTe/s7/HLq5xjAu1O/JB2f5+5B6ImycrXKwtoH
      7OczvDf5T3y4tghAqVZhbf1ddvO1J0jqVFSND2d+9m+vAFVd4Gx7G+F8jkIxSlvrCKJR/RKS
      IqJRRtZ1BB02tz8kWFYJpp48uR9DK8fIY2ds9Q5VYKBtgEQhTSIbe6qc09XFqfZu1EoOi6ML
      u6hTA9x2DzvRbbyOlifKdrQN0+N2Y7G6yWQPkMz1N57L7uGwoPFqf/8TZYd6zuO1WrBanGyE
      9viTK28DYDKqxHUPl9r9T5AUqMpJWjsvolSKXBk4Rz4fBXRSpQL7hzOESk/4Yoo20uktLg6/
      zI8f/ASv08pRLomu5bFa2vGYdSpP0B6Lzc1+YI6Xz75Ni92CYO+lzWbhwfy/UJJcRNJPXsQe
      m429ZBK9mqG94zToFQxg0N9NtlIikoo8caw2s0BMLrKx+QExBYKZ+lvfYRKIFCvYpCdouyAh
      6WWKCkj/+I//+I+Kojyxg//aKObDrCVzXGhzkzF8hCOzeLwDnOoceLqgXmXxYB0D0JU0HX3f
      4q0TQ6iCleG2nqeKihYPqcQmZnsrhVyULn8vR+koV0+9it/heKJcJhfiwc40Lf5TlDO7YPOj
      FGKUlArFWg2r1csJf+djZcPxTab2F3DZ3KTLJSTJQjIbxCspVKy9nPS3P7Hd7eAC88ENTnad
      IpTPcWPwFKNr4yzvT9Pe2k2rpwuH2fwYSYWfT/6antZOhtv7eLA9x9n+y+zGdulw2ChqEhf6
      LmAzff69p9eS/Gxxgh5fF99/5S9xCTptXh97iRIVeR/V3MblvhEE4fOtZpNr3A0d0eVtJRdf
      59SZPyKSPOT8yLe43OrEsPcz4HU/dqw7oRUqukZP13lCwTn8vhPEkgd0+zoJpBO8eekdXGbp
      84KGzlpgGc0wePHSD3hzcJCa4SKU2ECWc2iGRnf7WbzWz3v6da3GcmAZXZA+2QTXarVmRLiJ
      5w4P1UN4nGo/IwzdQNefYDh+kaxh8JQd0FOh63rDyiyZpa9lLpr494mHCmB+7Cf12aBr+jei
      ANpTvDNfBMkkIYhNBXhe0IwEN/Fco6kATTzXeKwXaONghsmdWfytwzhMEuHIAvcODzjd0feV
      bm4YxkNbvJJPcOfeOPFcmb7uDvbWF3gws4DP52Z8bIJYRiYZ2mJuaZPB4WGkT1khRjnBP//s
      QyS7g/ZWL5srs9y7cwvRN0Bid46NcJ5kYJ3bd+/Rf+oCVklgfe4eBxlQcxGmpqawtfbisZvZ
      WZpgK1ah1Wbw6w9vc+70CA/u3iRTNuhqb0WUxMfuAQxDZ/L2uxQtnaQDq0xNz9PS2cMHv/4l
      vSNnsD7Gs/JpRLaXGV06oJYJMbu4SkfvIHtzo2wlDQa6fF9pXpv418Njn9rJvssIlRjJchVD
      qzB5sEU282Rf7peByeHj6rkT7OweAAYTC6u8ONLK7HaKqxeG2dnZo6e7m3g4QFV9VLaUjpGv
      KqjHfugzF69TrdTocChsHEYIB4Ncf+k1qlUNr72+rXHa4DAco7u7CzmfIpkrAQbtbjMr+0cg
      WYlFQ1Riq4ytx5FLX0AHMXRshkwoLTN05hJCKUkiU0QuZimrT9/n6GqFyZUdUtEQe7s7FJMx
      QuEAe4Ege8F4YxPaxL8KHlUAtcSDnTl+N/UjTp75AcNOg/3oFrokshE7pPGtJVSSe/zq/ib/
      +S++SzKZQgTyRRlDjvOrOyv8l7/+U+yedjpckC0/GsGTPAP83d98n7mJByRTSSqZQ1T3AIVo
      XSkPghF2Fu4zfO2thwNyu+p+56pu4vr5ExwGo6QyedzuekDK4XIjiQKixcHA4DAHu8s8bRkL
      ogm3sx4z+PBXP2Holf/AuRNdOB/jZ/4s8okwui6wuXtIplBhpK+VhfkVBEkiEPniQF4TXx8e
      S4ab2Rolr2ic6jiBbvIx2OLiIBHhRMcXBKs+g097gbLRQ6ZWdmhvbyeeSPPqtTOs7EY4O9jO
      9NIWbd392JQcJcPO9WsXj4+q1e+jVIpMz8wzdOoUSytbXD87gKm1nxa7hK5VCB6lEdQyXf3D
      WCQBTVWYvn+HTE3k5EA34ViawQ4nScWNkQ+SzOucGulme3ufU+euouYjiO5uTg12192gj/EC
      aUqZB6OjKJYWvKYahYrGqZFhVlZWae0Z5KUr579oMtgPRLBLNXbDGW7ceAGLJrOfqDDU2/aV
      5rWJfz18rWzQ30s36BMUoIn/OdH0AjXxXKOpAE081/hazwQbGA1TEgzD4Km70i+SbdB8epZ2
      G8Y3aHE977SPr1cBNANNacweV2sqWq0xWf1Z9gAWCVFs7MMofkEs4GkwWRukogg09yzPgKYJ
      1MRzjaYCNPFco6kATTzX+AwXyGBi7RYHmRz9/m6qcpzfLdzC6uigxW7/yjfXNZ1sIsTtqSX6
      /Q7uPhgnK6t0d/jZ31xiem4Zt9fF+INRqqITn8PgR79+n0vnzqBrOlvL88wtrdDR5uY3791B
      sDpo83kopKOMTi/Q6bEwMTPD2n4Il1Bi5SBOf1cHhm4gZ2K892AWOxVm5udw+XtwWEwszI6x
      d5Smw2vlw3vjjAx2Mzp6m3xNpNPvQ5RgamyUrWAMk1pgcnYeT3svTovE6uI0e0dp3GaNB1Oz
      eHx+psfvkK0IdLW3Ui0luTs2Sa6ioRWOWD1M09/VRk3O8Jv3b6JLNkK7q6xsHeC0GEzNTKOa
      PPi9TkTT8aknXWF6fJy7o2OMXLiILid59/2bGCYbPrvBj9+9xWC7gw9vjeJu78NtNz/cyFaK
      aR48GCeer9Db1Y5hGNz8zb/g6Bjk9u9+gaybSUd2mZ5bZfDkMCZBeO43wZ+hQiTZzdSIx9Yo
      anB38SNevvQ295ZvNdyAIZkJ7G0h2ry8cOEUa2ubAKytbaJV0tz56H28Q9eYfnCL8dF7xDOp
      h7I9fX3IuSj7+7skS1VEsb5IdNHG4cEmLl8XZ3pcYPFiNwms7R48lL0/PU0qFae7uwejmiOc
      zKNVcuwmiuSiO2Rkg2D4gMzBHGXvKZbnx44lBS5fvc7h1iYrmxtYDJmtQAqtmuP2xCyqonDz
      5gfoGKT3Z5Ddp9lYmcIAJFsL186fZH19C7PVxPbWNgByNkoyIyOIJgb6B4gH9zG39DDS62Vz
      69H0gYhmXnzpBmVFwS5BMRUhnakgimZG79wjlU9w69Yob3/nTW5/+NEjojZXK11tLnb36ukK
      gxszHIRjJFJRgqEcgiDR3z9A7mifbLl5+g8+qwCCCUOvoRkG5XIWk2SiWCkhSo0flvG2tCAA
      SjbIL+8s8Nd//j3y+TyFskx3m5f2k9epHa1R1SCeypEMHZDM1yPTumCmt9VNXuzi7//ye0yO
      j5Iv5B/eEwxuT67zrZcv0uL95IC6Xs2SLdYIHO6RrWgM9XQQS6QplisYmoamG3i8XkwC+E68
      iF8JUah87PvU+em//Jgf/uVfUS6U6Ov0k8llKZQq+Dv6yBxtowgWzp8eZGp5DbUqYyAgALXM
      Ib++t8pf/vBPaGmp96daLiJ5+vnbv/4+02N3MVlduKwGmwtjLEZFvvsH1z83Z7tLDxi5+gZV
      uYCldZi//evvMXH/Jsl0nqP9PeSqQqlYRDLbHpFTahXaugeQc1ny+Ry7B0folRyRRJX/+g9/
      x8LUPZBsdHmtpIpfJhHB//x41AQS7ZiNAj7/GfRynNPDN9jYX+S182894RD206FrOrsbK8iV
      GogWdF1DLsusrm3x2otXiGQVrp49QTye5PW3/oAbL16nv6+P/u4udE3ncGedrGrj0kgvi4vz
      XLlyhdnFFUy6TLmq4nT7aOvootPvY2V1GU1R6ezpw2Z1cOHcOXq7exBqBYLpKkN+iWBeYrjN
      hrNtEFM1S0GuYrI4KBZy3HjlTTwOG6JQIxpLky+WuHLpPAexAkOtAmHZwukuByZPD2/cuMza
      5gFv/cH30DL7nDx3HZ/HRTGXIV+SqSo6qaMgNUUhEDjE39HJ6vISl6+/QjSwhdXXT5vHiiwX
      MSQbrV7XJyYQkM5XuXT+FJOjH+Hp6GRlcYlrL73Ba6++TH9fH6/cuMbC/BpvvvMWtk8d4azJ
      eRaX1jh76QrzszP80Xe/z9DAAD3dnawuzHH2yg1ysUMqFj9Xzg4iNU2gr5cLpNZUVEX94h8+
      QbYZB/gSeMY4wPOuAE0vUBPPNZoK0MRzja+9PkDDuYaMxmUN4KlJMJ8mqxvoDZCBBASMRgs+
      CDQuK9Iw70lAwGhU+BnRkOn1rF19TJNfOxmOBhexWlOoyU/K7fh0VItVdK0xRtuznCWw2BtP
      9W22NbYHkMxSw+0KkojpS5xoe6ys2PgG+ln2Sv/a+PfTkyaa+AbQVIAmnms0FaCJ5xqf4QLp
      TK3fZTuVYLCtFwFY3r5NSnfR7nR+5Zvrmk4hFWNsfh2/U2RiapqtwxgnT/QR2F1nemmD3t4e
      Zu59gLPrFKXYLiv7MXq72tEUjY2FaVZ29/G4HUxNT6IIVvxeN0eBbWZWN+nu7GB+doKybiZy
      uM7Gfpje3l4MRWVxYYJAMofPJjC5uIi7pR2bWWRleYZIukhXu5/piY+Q7C0sry2QKdXo9Ldi
      6DqLi5PE8hW0fIyFnR1cnjYcVhNT03c5yhQx6TJzK6u4fR3sbMySKeu0tXiRi0lmlhfYD0XJ
      JcNMzy/QP3wKUaswMT2GIjqIhbZY3w/Q1d7Gg8kx+nsHEQUQRZ2pyQcooo14YIvtcIL+7k6U
      co6xyUlqWElFdtgKxXGYVGYX5hBsLfg8DiLBHWYXFnG43SzOz5KRVbraWomHdpmcXcTt7+D+
      7d9RVCVKyRALqzv0DgxgkgRqlSx3JxcZGuhmZuI+uapAe6uXZGSf+1PztHd1cvuD31DSJAw5
      zdzKJl29/ZglgejhJluRHG6xwp37E7S09+KwmtAqORZnZ8hnk8wtbdLud3H//hiayYHf63pk
      /5CJB5ldO2CgtwtDV/ndu7+gqIoU40Hm1w8Y7G3j3ugohsWFz+381NpSmBy7x2EsS39vFwIG
      c/c/QDb72FqaYf8oTS0fZXJ8HN3ZQZvH8dhN8Ge+AAbnBq6yfbiIAlRKEeYPVthLNp67pqpp
      rK8t427t4myvm5poBwzuz8xx0qfzYGmX4O4G6TKgVpg/5goBbO1sYYgScnSbnG5nZW0VMHgw
      v8hpv8Av3v0V65Esuq7T1ztILLiNrBhAja39EMG9bd4b/Yjj7ThqOcNeqkjkYIXA/ho7hwck
      ayYGOtvZ2a3zdqjE2UvqBLeXWNndQUPAajGDXmN3P4DZbGVzcx2zSWFlfpTxzcjDg/9uXycj
      bXYUs4fLl1+gWC5iF+FgYxp79xkW5scYGDxFJrxDIieze7j70Fl1uHSHnbSCphRZ2TuiFNkm
      rUAyvEdeE1nbWGFxaw8je0DOcDPc42F1Yw+Ajq5upFqGYE6nr8vP+tYGACtLy5jNCuvri2zv
      J7BYbCyurFNLH3CUr7/0yjWVrc0VkruzzG3H0fS6E+DO/QmunOnk9t1b7BwksVrt/Pa999B1
      HeHYHaOoMqurW9y9c4cbV8/y0b1JAO6P3kNS0/T0DVA42mFxYZWKZGZ5aeVz60MTDJbnFwDQ
      q0m2tuNYrVbGF1fxVwP8049/TSRfQ/tsbQJB4OKlq6wvzKMBhfgBKysr7MWKXLh0mbWlBU6d
      v0atlKfV9/jU7PAYE+gX4z/iT1/7G/SazPLhCmaLRDD9pCIFX4xWvx/TcaTy7uQq77x8kXK5
      wtsv32BmaR2H00Orr56rp62t/RHPwh/+8Z8xaCtzd3EHh9NNrVqlfFxOSdN1BAFOnrrI4uIY
      iBI2s0C5poJWQ8MEhoJqmLk80svY7DKa6ORUh4dIKsfOQQD0CtFYDIvVjqIcl2mydXCqw0I0
      W+C1N77DC9127i3tUKkZ/MWf/ScOdhbJVyo4rFbkqkxf/ym2tubRqbttx5a2ef3yaSK783Sf
      fAFNraEZHHulBEbvvselV/+YvvZW7JZPPDCGYXDqzGUWZifAMDAM0JQqebmIze6gWqsCBrph
      kAisshBS+c6b14C6x7fV6yadzmGxO1EqVSqVMrJSxWGzIWt2/tt/+3tmJu5S02rYLBLFal0B
      fK1+zJKAbhicOH2BldlJyuUyggCapmOyd/EP/9vfM3n/I6yuFvpsOeYPswC0t7cjCCAKAqqm
      IQgC5XKB8FGSvb0QqiHidVoIp1I4HE4q1fLn1kdbeweSALpao4aH/+P//F+ZHL3N69cvM7+2
      j9Uicf7KNSbGbj8qqKv89Kc/5c/+5m/QKmWWltYwm0UioQA//9kv+PO/+ivUUoKs4aPd+WQv
      2aMmkF5mPxGlrFaQS0lOn3yLcx39dLT00vqUQhJPgq7p7K4vkyvKePwduNwt9LW7+c2Hd+hu
      a0GztXH1ZAfbgRiqqpNLH1GRq3T1DWIWILCzQSiv887rr5GMHDAyMszMwjKvXb3ATqLMt996
      m2Rog6GRy8Qj+1jcXYwM9GJoInq1gLutl9cuX2BhY5/hTgf7SRmzUWHo5CVeuvYivZ0d+Dxu
      DgIHDAyeot3XgqFrRGMRTp65glTNshHJctIvsZ+qkEsc4m0f5OxgH9F0gStX30AohensPU17
      ixfJJIBko7u9jXgmz8WzZ5idvE3PmRukAhucOX+dYi5BqVJFRCObKyCYnbS1eGjtOUF4e5GR
      8zfo9JjA3Ulsd5HekasUkkeMnL5AT4uDmqUNn9WgWqsimO20et0chfc4yqmcG+5id2+foZHT
      zMxMcuPaVY4SeS6dG2FlaYGRs1fp7/BR0OxcPjOESRIJB7bJ5Ip0DF3CyIboO3mWqakJ3nn9
      ZVa2j3jlhXPMz85y+uJ1zg11sZfUefnSKUwSrCwuIpfLvPzqayyvbXPtbDcza0f8+Q+/S2+X
      n1AwRFly88bLLxILBzl38Qqtj5hABhtLCxTKFSKHuwguP1vLC5y6dB1JlbF3neI777zC9tIc
      F669is/ziQmk1QoEQ0nK1RpL89O8/Sc/ZGSwF3+rj0I+R75cw2OBE+ev4bYfu5gfYwJ9rVwg
      paagVhurPlMtVZtxgC+B39c4wL+XQFjTC9TEc42mAjTxXKOpAE081/jayXCNQlM0qqXGTi2l
      QymUSmN7jyfVB/gi6LpO5ujJtX+f2qYo4u97UunTp8NkNWNz2774h4+B1WnF6fvq8R2oP59G
      CXxWj62hORZEoeG9EtSf7Wfxb6AAz/eBiy+DZ2NkNs/2PguaJlATzzWaCtDEc43P1Qgrl+Lc
      3V1huL0PuZTg7sY4bncXzgYPxZdyKWZXtunramNmcgxZN9PqdVNIRZmYW6TF62FmahzD6uVw
      c46t/RBdPf0YNYX1xVkWVhaRbC5WV+aRHD7cdiu720ssLC8gWF3ML06hGCYSR7vshOJ0d3VR
      zZeJxaPI5TIOm5VUOkKpJmJUsyQKZRxOB6l0HLlcxmm3kUiGkWsCTpsVQRRIZuKU5DJ2m4VU
      OkqxJqJXMyTzZRxOJ6l0jJJcxmG3kUxFKFUFHDYL5YJMOnuErAig5EgWq9htNjL5JHKlgsNm
      J5U5QlZAUPKkSlUsVismUcTusj68l1HLEv+4rVSMUrmM02EnkQhRqglQyxLPV7A77JhNEtlc
      lIWNLdrb/CwuzVDSRPweN+lEiPmNDdr8rSyvzJMpq1TycTaCEXo7OzFZTFhsJsbufoS7vZOl
      +WmyVZ2O1hbAYGLsNk5/LwerkwjubhLBDZa3Dujp6UUwDBZmxtgJxxF1mfmleQqKic5WL6vL
      0yRzRRQ5y+L2Pr3d3QR2lojJ0OZ1IYgK09OTZGSNcjrC8vYB3d3daOUM9yen2DoMIykFVnZC
      dLe5eDA2hsXlx+20gaEwNjFDb38PSzPjJIoKnW0+8qkoE1NTSBYnGyvzRDMyFq3I5Pwq3T29
      mCTxkbPTxUSI8ZX9zyfG+mjxJrvJI24MX+G92V9y/cwN3l94wJWBMw0pQCYV54Pb9+izFri7
      leNEXzf+Fjc//+k/4/D4KcZ3MPdcZO7+RxwF9ugePE1/TydqVcHt8rG6PEMtF6ft7KvMjN/h
      wpkztPo7WV+Zo93vYGEjwrkzZ2hr8bI8P0HfyYuUE0f89s6H7EeDOCWVe9PjpAwr0d0lFgK7
      tDrdjM3cZ+8ogNticGdyjJRq4XRPF1U5y+8e3GL/KIRDqHJ/Zpy0YSe8Pc/Ssez9mfvsHwVw
      mTTuTo2R0u2c6u4guLvI6Pw0ad1EMrjO6tE+HruL6ZVpDhMhXBYYW5whpQikI1usRA7weTrx
      OuzksrvcGn9AyrBytL3IwuEOfpebe1P32IsE8JgNbk08IKmaiO0vs3C4TYe/F5/HyZ3J+7xw
      opWbc2tUdDPRowBnT45w88EtLg93MbcV49zpk4xPPSCWSdMp5sk5Bun0WkkdbXLzziT9l67T
      5/dw5/44Vy6cJ7q/wp2pGToGz7I1+T6mnqssTY1irmaw9pzBY4b3PvwN/SfOcHrkNKngGua2
      k3R47FgtVo5SUZbXNzjpVjms2FhfniSnWDk90INgEvB4PNy+e49kIoqpVsLSMYTf66HTI7Kw
      dUQgdEi3mOXm/C7nr7/IxP0HXDx/lnK5yG/fe59L53qYWUsRP9xg5MIlDF3HY60yvhDh2oVh
      7t8fJxQOceVkG4uhCkM9/ocKYBgaH3w0SiQSedQE0qopDvMZAok9CtUq71x8h6XdWZRn2Ge1
      dXRhNUnUqhXOXn6RmbFRVFXFkKyc73MS1f2UQhuUahr/5b/+75RDSxxk6t6fSiFG1dLBS6++
      TXJvgYqio2oqWiVNHi8D/ef5u7/4Lvfv30LXVCSzREVRUTQVXVAwYaMqpykbVvxOBzldw059
      W64JKhJWaqUUVcGGz1XnIymaik4Nk2CjImcoa2b8bgd5XcNG/SifxvG9SykqhpXW47pj5VKa
      qmClxW4nr2tYqfNkNFQkw4JSzlITLHhsdnKahs0wsJrqX9ZSIUnZsNL6SD8F9ON+VktJKljx
      OR3kNBWbARZzPQL88pVLLG1voaoKhmGgajqapvLypausbG2BqHPzzi3++A+/x9VTI2wGQojH
      i2FhbQuTUCYSPuQ3H97mB3/6fVRVZWl9C1ErE0/l6e6se6gMFDRDp1KrZ/r4X/72HwitzpLV
      FDbCBc71+lA1FV1TKWgSIGCSBDbXljAEkdBR9HihlXn3/Zv88Ic/QFdVVE2lVquh6Tp37jzg
      nXfe5qWLZ1nbCQBgMpnAOCYctvjxOm0Yho4gSsecJZXc0Q6jKyl++N3XUJUamlB3D0gmEe0z
      rAA5FSKRLbG9f/B4KsTCwRKSWsDnH2IjuMrVkTdoc3z11IhKTWF7eZ6pxXXeeOsddtcWae0e
      YHNzi7dvXGBu7YBrVy6ytrrMibMvkItskJIF3nr9Faq5EnvLS4jeXjxShdnlFYZOnmFucZGX
      zgygtwzhpcDc2gadPScoxA+RdRMvXb9BIZwkdLiHbm7BI8qkaiY6/X6ymRg6It1t7cTiIXST
      G69YJalItLe0YjdLiBLEYkEMiw+3IJOsSfS2t5FKxTAQ6G7vIBoLYpi9eIQyScVEZ2srFlEg
      vLlBRjXh97SQzycxEOlo9ZNIRTEkBx5JIaMItLhbKBZSx9fbEUUBm1MhpUh0+dvIpD/dVgjD
      5MYrVUgqJtpbWsll4xgIdLV3YbaayBaO2IkkuX7xPIvLizhbOgkFtrl67ix7kf0xEqsAACAA
      SURBVDgXh3q5v7xFT3cfLWaFWFHnlcuXHrpBA9trYLexuLpLb28vgYMdfvi9H3AU3MTsamd6
      /A72tpN0OlViaZlXX3sDs6GwMDNNQbdw40wP+2mDAY/CvbUj/KYqFm8bXovBbjTHW6++gl7O
      cpCUOT3QS60a487MBj39gzgpcZQu4xJlWkZeRk4ccOXyVXbWF4jmdV65PMzdsSlOX3yRwW4/
      uXSYj+5NcOnFVylG95Hc3YR3l+jr7SZZUunr6SEVDSM6WhnusLO0E+bNN9/CYZE+5wZdXFr+
      t+ACPZoXyDDqjEbpC3LvyNkScvbRfn1cd/iL8vakg79fcQBBFGjra6xQnslqwuZ+9OX0Zefp
      cXGAL/t8HhcHMHQdQxAQv2D+HhcH0DQNUZKe6jR/UhxA0zQkSXqMxKP4huIAj0IQBKQGSVRC
      M5PZl8KzzNMzPR9RbDjq82UW8Nch23SDNvFc42v9AgjPEAU2jMbLKz1LcNTQjYYis4ZhPPYT
      +2UgimLDNGxRalxWUzTUWmOpK5+lDttD+a8IAaHhXFFP+iJ+vSaQ0HgOGK2mUcl//gTRl4Gu
      6Q2bAEpVaXiSnd7GeDWGYVAuNDZWpaY2mnoJrdY4n8dityCZGzM9DL2x52PoeuPFD58g2DSB
      mniu0VSAJp5rNBWgiecanzkUX+He2igfLI9yaegqmfQBY9vjZBUT3V7fV765ruvEQ7v89s40
      Z/p9vPvbDygoEj2dfjYWpxmfWcDtdjA6ep9koUI+us/6Xoie3j6UYoWDjRVCyTwtPi+B4B7p
      XB6Pw0IovENKNqMUwgSSeXy+FgLBXdK5PD5vC2pV5SC0R7ZQwOtyEAxtkamY0OUoB8kCvhYv
      wfA+2UKBFo+Lw8AG2YpIi8uBrukEjg7IFPJ4HDbCR7ukKya0UpRgOk+L10vo+LrX6SAU3iZT
      kWhx2gGdYGiTTFXCkGMcpgp4PR7CR4dkCnla3C4CwS0yFRDKcQ4zRVxOFyZBQFdrhCI7ZKsS
      uhwnkC4ct3VItlioy4a2yFZEkOuyHpcbs1lCEjWC4W3SZRNa8YjDZB5fSwuB0B6ZfJ4Wl5NA
      YINMxYRROmI/UZ8zs0ni4GCV2eUlfH4/YxOjZMoaPe1+NtcmWd49xGaWWN5YYWplDaUQZ2Vz
      i47eIexWE6vLU2xHklj1EjPzc5QFO+0tbm7ffpdCTSATP+D27Q8RHC1srC+QKqp0t7eiaUXG
      Jyc5jKUpJoNMzy/S0XcCq2Rw99aHFFSRQvSAxa09PHYTt0ZHqYkOOv1eanKWH/38t5w9O8T4
      6APW90OcHBogurfG/akZFNHGg1u/JVsxyEUPmJpdpKNvCNun6j4YWo2f/eQnFFXhM5tg0cYr
      Jy+yk85hEaDN14W2O0G6VGhYw1y+djLxu2xN5Rl88Xss3/0lL14aYW59i2/fOM3tiTlKxRIl
      VWT+cJnh01dQdR1QGZ+eIq+r2Exwb3oC0Wymlu9lcmWVrnNvUQkskFEV7B9fN0n09AxQlbOM
      L04jShJGZZD7S6t0nryOHt8iqdRwmGFicRokEaF2krsLK3ScuMKJTj8VOcvk0gyiyYQu9zG1
      sU7H8A2U6AZpVcFuEphcmkEwSQjVQR6srNFx4gVOdPiIh1cYnV+mY/AyQnqfpFLFZnqF6aUZ
      kEBUTjO6tEJb31nMuRBJpYrd9of0+31EQyvcX16j48Q19MQOKaWG3QxTKzMIoohYG+b+8irt
      AxcRM4cklSouxx8yaO8gdLDI3YUVOk+/ihJeJaUq2M0wNjdZrzxTGWJ0foXOkesY8S0StRot
      Xg+DPR2s7+zx0rk+fvyLn3LjjR9wuDHG9XOnkUsySlVHtPk425WmoHsIH21QrlSRFZ1Wo8zE
      zAKDI+douXyR1sgB6XwJgHJJRqnJXLp4jfnVTc4M9DARWCOdq68jq7MFt9VgO5Xm1T98jfXV
      f6GqahRT6ywGC1x355hcekB//wiTkxNcffPb3L95k0un+pGsTqrFNJjstLfa2VkLYwDJSIRi
      pUQkFESWVYolmf3wNtdP9zK1vMd3XvmEy6arNcq1KsVi6fMm0P3lW7x56dvE0gESJZnXzr1O
      KL7fsALY7TYEwOPzkYkfgWgmEolgApKZAno1z+C5FyjmErT4u2izyBwkZdA0KoKOyZAwAAEZ
      k+ClVMpQ1R10uC2UDQ2zUfdECJSRBA8mUUTRVAQqiIILuZhGFZy0Omz13+sfey6qiDgpl1Jo
      koOW48x3iqYAFUTBjSxnqBkOWh3W47aOp0uoIuJCLqVRRQc+V122kE+iiQ58DjuyoWLW61Fl
      Q6giGA4qcgZdtOG1O5ANBZMmYD1m2RYKaVTBgc9upWyon7RFDREncild76f9k3tbjnlEhXyK
      muGgzWmlzKf6SQURF6ViClV00Oqw1WUNEbOpziN669XXWdncZujECYr5FAYSsUSUgZOXuTLU
      xtpegHvzG7z1wnkKNZXhDhepUg0w0eJvx1ZJcPf+bcquIV67MEQ0HufGq99CcjnJhNfw9p6n
      LJe5+sIN4tFQfeblAiMXblBIxvjVz37Cm9/9j/ikKnnFTG9PL+HAJi6Pn6FWg1BOIZlIIJnr
      0W6L1YYkCujVEp3DlzBKGaLRMPuRKC+9fINIJMZ3/vQHhPc3+c4f/AGr67u0+z+pHweAKPEf
      vvvnhHfWP0+FCCYD9PkHOEruYbW6WA1vcmXoJbw261de/KqisrO2wH44wekLV8mEd+kdGmFp
      ZZOXr5xmdTfCtUtnWZ6fpWv4HA5k9o7yXDl/ilwky+H6PgYCHpeTQi6LYXFi0avIuoDP7aZY
      zGMg4HW7yOeyGCY7Xqedcr5ENpPBMNmwoSDrIm6HE1ku1H/vcpIv5DEka/26IeKyOTBLIkq1
      Sj5fv5fFqFHWRTzOT2Q9TieFY1nrsazb7qgrXqX48F6VchFDEHA7nRQLeQzJgk3QkHUBh81B
      9eF1NxgGcj6LbAi47U7K5SIGPNqWoFLWBZw2B5VKCQNwO92YrWYEQUHWBbwuF6ViAUMAr8tF
      Pp+rz4GhUDIEPA4ncql4fN2D2WZGriQ5yitcODnEzvYKrV0n2Npe4+LJIbbDCS6fO0c8Eae7
      s4tMMkwwJXP59AhWh5VCPkYkW8NrVtiPxPB7nciCjw5bFUV04rWJOFu7MSpZFtc3OXPuCj6X
      HZNNZ35xkb6T50gGtsjKCmZBZ+TKy5SOdjB5e/DbDdYOorxw4TSLi4uMnLuM22Ehl4mwtLFH
      d98gciaGr+ckod01Xnn5Jebml7h47TrBrWXsbQPY9QLRvMblcyMIooB0XIfNMDRWF2bxdo98
      zTXCFLXhIE02nCETSjckW86XG84L9CxxgEZrixmG0fA8maxm7K6vTlSEei4iu6cx2WeJA9i8
      z3ImuMHcSwIPFeDTaHqBmniu0VSAJp5r/LutEWZgNBziNwzjYcbmRmQbpQd8+mjpV263wRi/
      oekNm0+SJn0jKSQNzcAQvvp4RcTGuUBPqOH29dYI0w0MtcGF+Nl02F8BSk1Fa5DkpapqQ3wT
      XdNJhBINtSmIAq0drQ3JqlWVWrmxHKpWp7Xx/U5RfHiq7KtCMDVG15bM0mPt+C/XKBj65w2e
      pgnUxHONpgI08VyjqQBNPNd4lAtkqNxefI+DTJYT7b1k03vcWhunJtjocHu/8s11TScZOeCD
      sTmGOlx8cOceuYpOT4cfw1D50Y/+id4Tp7j7mx/jHbzM7P3fchhJ0NXTjypXCGxvcJTO4/F6
      CIUPyRbyuO0WjqL7ZMom1GKUUCqPt8VLKHxAtpCnxeOlKlcJRQ7JlYp4HHYi0X1yVRGjnCCU
      KeLxeDiKBcmVinhdTsKRXXIVEa/Tjq7rhONB8sUSLruFaOKQXNWEVo4TyZbwuN0cHV93O+0c
      RffIVUXcdiulXIFYKkChJkI1TbQg43Q4SWSiFMoybruDaDJAoQZCLUO0UMZms2MSRWx2E9H4
      AbmqhF5JEs4W8bjdRBOh+jicDiLHbVFNEsqW6jwiUQBD+eJ+xvbIVUT0coLQ8XWLxYRciHCY
      LOD11jlL2XydHxUIbpMtCwjlOIF0CafLRST68XUvgiiQiR9ymKzPfzh8UOcdeVwEDjfJVETy
      uTjZfB6vx00wuEOmpNLidmFzSoxP3KNwXAJqfnWd7t4BRLXEnfujZMsGHS02/unnv2C4s4V7
      U9NUdDOdbS1kUgEmpmeoCVYm790kW9Hp6eogGd5ncmYaWbcy/eADMmWNTGSblc09Wtq6sFtN
      VOUsP/vNTU6fOsGdj24SjGc/swmuxTgsmbCmlymduUEsFSCvyhwmQlzs7m9IwyxOD7HwIXLa
      TzxbRlYDvHjxFKtTo2QrKnJNQylnydcglUjh8DsQRAPQGJsaJ6tpmIU3GJ15gGQ2c32oj6mV
      ZdrPvEUtuEhKVbGIb3B/+gGCWaKzs4+anGN8cQrBJKENDTKxuor/xDWE5A5xRcEivszU8hRI
      AkZ1hPtLy/j7L9Pf7qMq55hYmkE0SVwd6GNmcx3/iRfR45ukVAWL+BLTKzNgErleOcHE2ir+
      gWv0+DykkztMb23i6zqDlA+RUhVM4hVWdpcwRAGUE8zubuJpP4mlFCWl1jCZX6XX10LsaJ0H
      q2u09l9BSO+RUGpYxBvMrs+CKEBtmLG1Vfy955FyARJKDbvtW/T6fURCa4yvr+EffBE98al+
      rs6A9Ol+Ht+7VsPl+DZOZxsTczNEq1XM4utMzI4dz8k57szM4x+8iDUbIFqrIBivMzM3hiFB
      W/t/wm03GJ+ZIlarYZXe4MH0A5BEqJzm1vQCfcPnSIb30UWDN9Rr3JmaxdUxwImeTpKHS2yG
      c1z0lDnZ0cb82jplVUM+WkH3nWZjdQwt006+ViUTPyJXltHCES6dOUFr5yA90SCBcJRULoun
      WgMDfJ399KdC7AUDpNMl3B0K5WyKqmED4ZgEJ1rIp6OoSolgKIZkkz9jAlm7udHjI1QoUSpE
      CaQiXBu+QTwbbWjxA7hcTgQgEwsxdP46hXSCRDJBIlemnIoQTxdxHEf33v6j72GvRAlna6Cp
      lNExG+IxF6jO9SmV0lQ0Bx0eKzIalof8nDISH3OBFAzhmOsjp6kJdR5MydCwGmLdIyDUkHBS
      +ZjP82kukHDMIypnqWHH76i3VefY1Lk9Ek4qchpFcNDqrJePkuUMqmjHY/349/VDoYagIGKj
      Ws2hiVY8lo95SQIWU/0dVCymqQn2Y75OfVz1IkJVRBxU5Ho/vXZ7/fqnuEClUoaaYcfvtCJ/
      zFkSBAw+08+P742IWTKBrlPSVayGiCgIGEKt3lYphSraaXE4KOoKFk3EJArogoKg2zGbxLqs
      UZetj7HellxMoogOnGYzmqAi6FaUSh5dknDb61aE2Want3+IwM4aJoePgRY7sVQaU/sF2owj
      ZBWypSr5eJDVnV3OnL9MJlP3sG3OjXKkt/PtVy/xg+//DeHtVRLpBJvz99gr+/ijN67z/b/4
      jxzurHLlpbe4OOBicTMIgN3hxCQKKOUcdv8AKIXPUiF05rfHafWfQaglaWnpZXl/gdMDLzRU
      JlWpKmyvzLF9cMS5i1eIBnbo6h9ic2uXb7/zJrFoCJvNzvTMLK7WXjrdkK2ZuXr+NLlolv31
      fQzA5/GQzaQwLG5sRoWCKtDe4iWXz2IArV4vmXQSw+yi1e0gn8ySTiQwTHZs1CjqIi1OF6VS
      nTvU4naTy9W5QnYUirqI2+HCIomoqkIum8IwObFRpaiL+JxuiqUchiDQ4nKTy2cwpPq9S7qI
      x+lCMiC0s4usH3OBKkUMBNwOJ8VSHkP8FBfI6qBa/fi6G1EUcLgkSrqI1+GkdMw7anG5yBWy
      GKINu6BQ0kVcdifl8secJg+iKKBUC/V+utwUi0/vp1zKH1/3YnVaUUQFHQGf10Mum0aXbDhF
      lYIq4Ha6KH88Z14PuWwGXbLQ6nYjSmK9bx/PfyaFYbLjEBQKmojX6aJUzGGIEi6zSLGmYrW5
      cVpNeLu97GyvYPF2o+ajZGsiFiVH+4kLBHfXGT5zBb/bTjASpNvvZ2FlmcGRC3S1eUkkDtiP
      JOgfOoWcDOFoG+Bwe5nhgR72I0n6ToxQSUewt/bRYqmxHUrz4rUrmE0iqdgh86vbDIycRcvH
      MXm6vua8QNXGa4Rlj7JkI9mGZPPJ/HMTB/g0yeurop4XyNWQrCg1Hgfw9rQ0HAdweL96sUag
      fj79MUkLml6gJp5rNBWgieca/265QIIgNF5c5hm4QP/WuW4+brNRHpEkSc9Ew264z88AQ2+Q
      C6SLDfO0EB//fL5mBWh8ckWz2HDtq0QgTqVQaUjWarc2luBKALXW2CLWdZ3DRGNnH1xeF+3d
      HQ3JSmapYc6VaBEbPg9QKVQa2gNoFg2ztbEaYYIgPLa/TROoiecaTQVo4rlGUwGaeK7xuRph
      a7t3CVbM1AoBJransLt6cZsFxtdHWYuGGO4Y+NL2m65pbK/MMzO3gLejl3sfvYe/bwi7WaKQ
      PuLW2Cynhk+wsz7LRihLt8/CP//qAy6dO0OtXGNzeY6FjR3avA6mF+bIVVQ6W33s766ysLZO
      a1sX02Pv4+0+zfbaBJPzs3T1naKaKRA6ClIoy7hsNuLJIIWaiFFNE83JuFwu4qmjOj/H4SCa
      OKRQE3DbbZjMJqKpCAW5hNNmJZ4Kkq+KaOUk0VwJl8tNLBGmIJdwOezEEofkqyIum4V8Kkcy
      G6akCFDLkSiV63XBcglKlTJOm41EJkxJAUHJES9VsFltiECtViGdjyGrIoaSIyVXcNgcZPIJ
      5GoFh9VGKneErB7XH5Or2K02bDYrdoeZRDpEviqhV9PE8zJO5ydjdNltxJOBz82B1WqmUkkQ
      Tpdwu11EYyHyxSIel4twZJd8GYRKknBWxu5wEot/fN2DZJbIpUOEUgU8Xg9HkQC5QgGv20ko
      uEOuIlDIJ8gVCnjcLsLhPXKyitflxNBkxqbHKWkm2twW3n3/fYZOnkY0FMYn7pKtQrvHwc8+
      +B3nR86wvjxGrCLR5fdicZiZuPMeZYubzaU5DuNp+nu6KaXDfHTvAQ5vGytz4xxlyxhykvH5
      ZTp7+rGaJGLhPaZnZxAdrRyuPiArtH5+E2wxKqwlY1w6f5FEYoP9TJYeVzcvnLzO/3fnR2gX
      3uCrxD8GTp4jvLdOKJqmkEtRqKr47BYMyUHwcBu1co3VvSDlmhk1dUAq/0mRicWNHa6f7GA+
      VObS8AB3Fna4NDJMZ0c36xurpAslirk4hRpcuvQia3s/x22TSJbzTK5MI0gSVwcHmNlcx9d3
      CTGzT1xReFV4kbn1WQxJ5PrQMJPrq7T0nKfb56UiZxlbnEQwmbg22M/Mxhqtg9cxElskVYXX
      eYnplWmQJK4Pn2BydRXfwFU6vWfIpHeZ3tnC234KUylCUlG4xiVWD1YwBLjcd4L5/S3c/iGs
      cpykWuPqyZfodLlJp/dZCO7h8Z9CKIbJaCqXOc96cB1EgXNdfSwHdnH7hzDLMVKqylXTC7S0
      uIkebTC5uY6v7xpGapukqvIq15ldnwNJ5NqJQaY31vH1XkTKHhBXFN6yvYPbbWVydopItcrb
      vM7k3BiGJPDahXPcnZnH138B+//f3nu2OXKdaZp3RMB7JBJIpPdZleU9RdOkJEotabpn5tqe
      vbZ3drd/y/6C+bJmdma3fctQLVJNWUp05bIqTaX3PpEJ7z0CNmI/IFkki9LVJIoU1Szc36oO
      TpwAcN7EifM+53lzJ4QqVZ6//DwLS9MoIvzH7/wlOmODhzMPCVWqfIs/YWpuCiSRly6e5f2Z
      BXpHz5MMHtIQVV6+ep3bs48wewbp93qIHK2j7RxnfW2WUsxJRi5RU6AUXqVsHSO2v4CSOSaS
      K1DOR9kPBNG7rVwZHyAZ3OUkFKXW1WDA62Rq9ZAXblzl7v0HvPzvvsfrf/+3dEy8QGFriWOd
      lleuTTC7fsC3b5zF3dXN1vY6wWgcRz2LL1H45BLIYW56qDxa/zU1+xWe7+0kW8rww/s/5n96
      +a/Qfsbs39S7v8Ax8RKXx3uxGZuan0w2g81uRxAgenJEQ1XxBfwk0nniAR+JU1foF65fYXFr
      D0M9wTuL+/z7V79OLp9FEbT0ddrIyI3HOiL/7gJ9EzcQadb5QqgiCibKcoYqBpzGj2iBaOpz
      JIxU5DQ10YjD+KEW6ANdi1xKU1ENjzU2ulMtkPKBZqaUbup3TmUipVKGumBoaoGUBroPtEDU
      ETFQreSoCzqsug/8eQR0UnNXQy7nqKHHptdRVhW06mlBN6GOiL7ZV9Rj1TU9inQqTT0PTS1Q
      RTXQYdJTUhV0qkBTs1RFwkSllKEmfPgZ6FQBjaQFRSGv1DGoAoIAilBDVI2UiylqogGHyURe
      qaNXaLrXCXVE1YBWEk/7NjB8oDsSmv5Fcj5BVTSfaoEaj7VADUnCZrQB0D16FV3RT7GmkMoX
      SMf8xFJJKopIvVJCVRXi2QKlVJCFtS0kUSUUjQJwdBIEpUww6Mfu7kcp5cnmMmgliXy+gK17
      kmG7SjJXRgJKchm9rjlHKnWFieEBookMttOacE9IIRo8XH+HjKKn06ClUKsy4h6hVKsSiO+i
      Mbh5ZeIW0qcMglqlyuzd2+QrCqMjw2xsrGFzecikc0wOe9nYO+LStRfodZvx+aOMDPZzcHTA
      6PAohVSBvZUVYsUGA04Dq0cBPB0uIokUo91OIlmZs8NDLK4uYuscxGPR0NUzhE4S8G8cEwkE
      UCQTJqFKviHisFgpFrMoCHRYbWSyTd2LSaiRV0TsJis6SURv1JLNJVG1FoxUyNVFXDY7+Xwa
      VRDosNlJZxKokgnj6bWdFhsiKkdrmxQVEavBTKl8qtcxW8gVMqiiHpPYoND4wNunAAjYzDZU
      RSGdjDT1Oqd9oenjkytmQdRjEOpNLZDBhHza12qyYrVbsNi05BsCHRY7+WIG9fQ9prNJ1I9+
      BmYrhVL2tN2B0WqkpqmhCiIuh4NUKo4qGbFIdbK1ptaoWEh/pD2BKunptNvRGXVk8ikURNwd
      TpKJGIrGhEWskq1LOG1WCtkUiqjFrhfJlmsYTHasBi0INVY21hgYOYfbbiEQOCGdDNAxeJl0
      YAubZ5gBjwtf4JihvkFq5RyxQp3BHg8Wl4ViOkq2LuE/3MHi6iV8vM0Lz7/A4vIqly5fY397
      FVfPGA5djY3DIDeuXUOvkUjEjtn1hZk8f56dlVlkjeOL1gJVW67VVUgVKKaKLfX1b5z8wfMA
      jUaD0H6wpTEVRaFUbO07eJo8gNFqxOb+7Oc84Ol8gSSd1FIeQKPTYHG1pl1q5wHatPkdtAOg
      zTPNFyyFaL1G2NNVg3y62mSt6E1URW3ZY+dp9Diqypcy7lN8xK3rvL6AKfHFFskTBSRda0OI
      mtY9YCRJbLl0ZjFbbCkA6vU6/mN/S2MKgkBHZ2vnAeRCiXA51FLfrmEv3vHulvqKoojQ4nkA
      k8PU8nmAVvVhAPyOMdtLoDbPNO0AaPNM0w6ANs80n9AC7R3PECpLdJnNvP3opzjdZzBKIptH
      c+ylEvQ6vb9rKfU7URSFfDLC/fkNhntdvP/OO9Q0VjodFrbXHrG6uYvV6WTuwV3KGHGaBX76
      q/c4d2acqlzlYHOF5Z1d7BYTiyuLFGrgdtrx+7ZZ2drBajWztLJIrqqSjfnY8Ufo7faSj2UJ
      RQIU5BJmg55EKkihKqJW0sTyJcxmM4lUhIJcwmI0Ekv4KVQFLAY99VqdeDpGUS5h1OtIZiIU
      aiJKJUOyUMJkMpPMNNtNBgPJdIhCVcCo0xIPR8mVEpQbAjSKZMoV9Fo9eTlLuVbBoNWTLSYp
      N2i2V6poNTokUcBg1JEpxJHrImo9R6pUwWgwksknkasVjHo9qVwUuS5APU9KrmDQGZBEEVDI
      5GOUaiJKLUu6VD7tm6BUKWPU6UjnY5RqAmotR+q03eq0oNHJhFJFLFYL0ViQfKGI1WImFDoi
      L4NQSRJMlzCZTMTiH7RbEQTY2lzgKJZGqhVY3lgiVRbxuhwsLk2RLNYopsOs7uzQ1d3Pyd4i
      kZKA225Fp23w9vvvIysSufgx63tHdHf3IgmwtPiQtKyQih6xsrWP02ZkfnGesqrD3WFHEKq8
      fXuKoeEBZh/cIZQs0tvtoS5nuTP1AK3OwPrqIjPLm3QYVKYXV/H2DjQNDypF3r49xUCfm4cP
      HrK0sfPJh+B6Ocl2Voe95mcjeMTIeQU7OX67PsONMy/BqUnJp6Wmwt7OBv1iGMfZb/Lo4Vuc
      GfpLDnZ20bn6CW8/Qt97kcW5uyQP7fhjH1qwbO/tYNRqOMkqnB8b4b1H65wbHmBzZwejXiSc
      rXNufIR3Z1YRkRmw6whkJqnJOaZXZ1EliWtDg8xvb2LvvYgmc0SkWuOFyQ+1QDdGRpnZWMPe
      c55vOy5QlXPMbj4CScOl3h5WDnexd1+E9CGJep3nxq+xvLeEKkpcGRhgYW8Lu/cCL42OkisE
      WQ8fY7b1oy0nSDfqnPGMcRg7QBVgzNXDbvQYo7UHfTXVbPeex222kkr7WDk5wOIaRyoESdYb
      XO6fPNUCiUx6e1n3H2BxDqOToyTqda4MXaPLZieRPGT15ACr+yxC7oRUo8EV9TwbJxsgSpzz
      9rB+so+1cxypECJRr3NTe4seFB5OP8BfrvLNWy8xPTeFIor8yeXz3J55hHPwIubcCX65wkvX
      X+LR/BSKCP/pz/9XrFKJnWAWc/2EM5N/gd63jcXRLKTo8x0xeamLnr5RTvbXCcajbB0donOK
      nBvoplJI4o+nGBzXsLW1i1bUECuUcVV9TG+G+JPnvPR397O5/mtKl29ydqSHqdVdzo31U67U
      8B3tUqtd5eA4jiAmuX71Avd++2tkmxe0Jm5du8Brv7jPvdkFXr4+zvTKPt+6eQa5UsN3tIfw
      7W/ywq0L/NPPpp4MABVRFMgW09S7RrjRN0C9kmEvm6LD6sIXWuPm6BUMCrnUzAAAIABJREFU
      0qcPAI0kUsznkUxDhI92ELVGdvd2uXTrBU62FjmWjSjFI5AM9I6fx534UAxXrZZRGiJqaIdf
      JvN8+8UXOTw+pForgyKSjB6wvJzgWy+/woOpt0kWVIZ0ErLRxkhfL6LoxGms0dN3gbGhMSLh
      Bi5FpL+rl0w+iija6TA06Bu4xEj/EAA6o42Rbi+C6MJhqOLtmmRscISwroZbFel1d5MtRBBE
      J05Dje6e84z2DwNgEEVcjiG6HR4yebCqAp2WDkqVDIJgxKYV6HQM4LZ5yBVFrAh0GJuZTaNG
      wu0ao7+rj4S2gUMV6XK4yctJBMGCXafg6Ryjt7OHVAZsqkin2drsq9Xido0x1D1ATFvHqQp4
      nR7ycgJBsGHX1fG4JxjoGiCRUnGoAp1mCyDSOTiCWxEZ6R8inQ4hCA48FoGRMzcYHRknGpRw
      KyJjg0Pkc2EErJh1IogWemwwu5nkpVqGk4KG6x1GjgInXL/xIolSgXv3fo21exKrpHLrylWW
      j0+LLeqsvPri8zycn0WnlKkJIsV0lDrg6XSytbmEWThHvVbFt7tEIJbl1ZdebM4njYZquUQ2
      m0OuVEBQOT7cxWS3YXQ6mHs0j4MML7/6HVbu/5qjQAybt7nTpdVqqJaL5ApF5t55h+9+73/4
      pC/QQWiHGhpGvWPUKjlEjR65VkOjVijURbrtn367rl6rEwkck8wU6Orpp5SJ43C52Nr1cW6s
      j2i6xGB/D5HACXZPD2a9lkw2g8PuoJAskPSHiWbyeOwWgtEYBqOeZKbE2aEeIqk8HqeFYCSG
      wWKnw6QhX4WuDif+9WOyiQyqqEFDg6oqYNDqqNUqqAgYdDoqlfLj9poqoDtdipRLMmVZRhW1
      p22g1+qo1aqo8ERf5XG70miwvrBCHdCKGhqNOiqg1Wio15t6GwmVhgqSpEF53K5FFARsDgt1
      QCdpT18Peo2Waq2KKkjNsZ5ob96zCDSoqwJ6jZZavYpKs/hetVZBFTRIp+06jZb643YdXcNe
      es/1NYPXYKAsyyBq0AoKVQV0Oh21auWJdgmjXo8oCsQTYbQmB1adSFmRkKpJ/FkRtxkagp56
      JUuhXKO7ZwijpFCqNLCYjJidxqaYrbMbsV4iWahQyUTpGjlPLRdHMtppyBkKNZFOq45gNIHF
      0Ul/t5sGJYLRBPYON1K9hGCwc3yww7Xr1wkcH+PtG6SYz+J0OqlXSgRjaQb6ehEEyGcSBGNJ
      HC4PeknA4XT+8dYIKyQLFJOFlvr611vXApVL5ZbzAFvLmy2N+TR5AFEU0Whay7V0DXsZuzbe
      8rit5gHMHebWfYEcLfoCQTsP0KbNk7QDoM0zzRcrhXgKPY8otW67odFqWpfqalqrmyUhYbZ8
      dv9UaEpGDKbWUvySJCG1uATS6lqzGAEQNWJr9jG0Pi8EQWh52XV6hU/8zxdujNWqaZNWr8Vo
      ba2GrdFqRGhROdWqqE1RFPpHBloaEwFMltbWtqIktjyRTY7WAhaa5wG0hhY9esTWaoQJktiy
      tuz3WVS1l0BtnmnaAdDmmaYdAG2eaT6hBZpZeYP9ko5GKcD7y2+SlXrot5lZXP8lG9kGIy73
      p764qnxovqoUwvzND99Cb7Hg6XCwOH2XhaUVRK2ehYUFDv0xwofrLKztMDI2DvUG1WKWv/2b
      v2X47Di3b98BnQmX3crSo/usrK+DRsv62hIPV7fJhA/Y2Nmnd3AEOZln72CHVC6Lw2rm+GSL
      ZFmDUghxEM/icjo59h+QymXpsFs5OtogVZbosJqoVWr4QoekCznsJgOB8D6pioZGMcxxKofT
      7sAfPiJdyOEwm/EHd0iVJRwmAxVZJhDZI1OVoBznOJPHbrESivvJFPPN14f3yVQEhHKck2wB
      i7FZ50vSqARCe6QrEkopii+dw2mzE4j4SOdzOKwWTgI7pCsSqhzFl8pjt9jQSCKoNQKhPZJl
      LY1CCN/pfZ6EDknlm/d5EtghVZFQimGOkjk67A70Bh3F7Ak7kSyuDidHvl0S6Qwup4393VUS
      JQGhEGQnmsNut3F8vHfa3oHWoOWdt39OJFOiVoyxsLpCRTDjdlhZmr9PrFglfLjJ/NoGXV4P
      P/uX1+gbv4JBA0Itx2tv/gq0BlKhQ2YXF+nqH0YvNnj/vbcpKRqSgT02D48x6EQWl+eJZKr0
      93jQmXSP59fJ9jI/u7PI5XPjnGwtMzW/QEFWONhdZ2ljnzMjvfz3//Z/M3j2Gmbdh5siar3C
      az/8EbKi+eRD8KCriwepHF8fvsrMzhyXur2AwLinm5+ctFawAqBcKmE0aUlncgDEIhGy+SJV
      jZXR3g6WDtNEc0nOdZs4iBUZtWmZn5vGYLawPX+XjGojnkwyPtBDLBYlVyyB0UWv9Rix4zzh
      9duUGwI1BSqlLHMbi03n5GqSqfUtekZFarFd0rUqNoPEo41FBElEW09zf3WL7iEY7e6kImdZ
      3FlFkjRQTjC/v4d36Drl6C75Rg2rTmJxZ7W5S1VLM729i3dAw2Cng2Rsh/n9PTzdcJL1k61X
      MWtF1g43EEQBbSPPwsE+Lk8dfyFMrl7BYjTT43AQC28xu71LV79ALXlItl7FqpNY2ltDFAU0
      jQwzO3t09aqomRMy9QoOi5VeVwfh4AYz27t4hzWUI9vkGjWseonF7RVESUKqpZje2sE7KFBP
      HpCpVem0O7A5jEwvLZOsVrAZRKYX5k7vM8P7cyt0j15kN+kjVS1j0gnMLsyBAL19I5hQESTI
      ZNKYFMjn86RyTRODueVFrtz8OsfhCC+MdLAermDUqdROc6LVagWtXiKdzXG+v5OZ5VUUFfLB
      dbbiFSRLgsOdBXq7B9FZrqLKefLaysfmk1Ivs7gbgnIWgGwyTraQR5uvMmgzsXXkY37qNka7
      g/ITyVhFqSNpJVKp1JNLIJVao0a5WqZUDKAYetE3ChwlItQaNSq1MkqLx+hUrZ1Xv/Eihztb
      HB0dkiyUuDjey/bKDO+vhPjeqy8iKAqxlIzTom/2ESWS0RNqGgMdDjdB3z7HJz7SpTLnhrzE
      0llmtoM8f66fiirgtenIlWvUGjUEZATBSrGYQpHMOI16KmodzWlNK6ggYKFYTKFqTNg/UiNM
      QEYQLZTkLA1MOI06qtQRT+uLCZzWECumUUUjjtMtzEKxWZLIpm+OJakizdGqCBgpl5sWJ1a9
      gapaR1TEx75AhUKahmjCbviwL4CgVhAwI5cyIBmxGQzNdkVEe1ojLF/IUMeE06ilSgNJbf61
      E6ggnN6nIplwGD+8dtMXqIGs1pCUD+6zAlgo5ZOgNeIwmSmrNcSGiEb44H2Y0GiaCtQLF56j
      kY1zFEtz6dxZ4rEIJ8EALpeXqtaKqII/lsdjN1Kr1ShXTiexaOCl514k4Nunho5htxV/KEBW
      MeJ1OolFfNjtLnqsCssHIc5dvkoi8vHTdrVSDo0ksnNwxNHRAUehGDduXiV8vI/dO4RSzaGI
      OtKhYyLRJ5y3BYEXXvgmcb/vk1qgtaMFKmgYcw8gam2YpRrJYolo5gS5LnB5+DL6T7m12ag3
      Hm8pqkqNzfVN+oaH2Nw64MrkMPv+GMO9Lrb2jrA4PfQ6DSSKCiP93VSKFarFCtl0EpO9g/Dx
      HtYON3uHfi6O93MUSnJmdIhUJo/b5SQVD5GSVUYHegmun5CKJlAlHVq1TkUVMekNVColVATM
      RgOlUglV1KKjQVkVMOr1aESRYrZAoZAHUYeGOhVVwKw3UK40zbpMBgMluQSiDu1pu1FnQEAl
      HYuf6o70VGtlVMCoN1Auy6iihA6Fiiqcaosqp+1GBAG0WprX0huoVmRUBEwGPbIso4oatDSo
      IGLQ6qlVm+1GgxFJElHV2sfuUwXMp/epijp0H7nPSvWDdhMmhxmdXYsqCJhNRkqFIqqkRS80
      KCsCBr2Barn0YXuxiCpqsBiNmOwmkqkgVdFMT4eF3UMf3Z0WAlmBEbeRVKFKp81IMFWgt8PM
      9qEPs62TiaF+BEFlf3+Hzp5h5EyYQk2DWozjGb1EJRVAMrux61WOwkkGvR3sHh4zMnYGu82E
      pfPjtijxRIL93R1u3rzO5uYu42fPcLy/g6Wzl74uF9lMEoPFif4jOQtVVTjc3cLiHvhitUAf
      DYDPygcB0AqBdX/LWqBitthyHqCQaU279GXmAZw9ztb62k1/8DyApNN8IgA+Ne08QJs2n6Qd
      AG2eab5wKUSrCKLQstZEZ9K3XEuq0WjQqH/2JZCqKlTk1pZsgtB6qVNRI7ZuH6OV/uB6Hmha
      HLaCpPn8/15/4WK4VsVLGr2m5S/HPexu+RyCnJVbewZoKC17EQEtf06SJLVcN8toN2K0taa3
      Ep9iMpqcrfkCPRXC7/6M20ugNs807QBo80zTDoA2zzSf0ALNb/yCo5KOfGqHh7tzdHaOYtII
      vDn9QxLlGn0dPZ/aF+ijhZjlbIy7U9OcRNMM9fewt7nM9PQsok7PytICDxc3sJLj4doxE8P9
      qIpK5GSP39ybp6/DxPTcNLOrh1w4M4pvZ5WF9R2sJg2/eOttRJ2Zg415VrYPGR4ZRqnU+PUv
      3yBZqFHKBFlaX0U0u3GY9eysTLEVkRnocvLLN/8JQ9cYq7N3yNUEulxO6uUy9+6/z3EshVgr
      sLQ6j2TtxqaDh7P3OIokcJok3rp/n7PDwzx4eIdiQ6TTbqeQzOL/QK9Taup1HDYbwfDxh3oe
      /y7pMghyDF+6gMXc1AKpag1/cJd0WYNSjOBL5nHa7fhDR2TyeRxWC8cn22TKYlMLlCxgt9qa
      1VqoEQjukSxraBTC+BI5nA4HJ4FDUrkcDouZk5NtUmVNUwuUyNHhcKA3aAlHD3n48F3ymFlb
      niVVqtPr6URV6rz55vexuXpYWlngJBynmAmzsLyEu28Mo05kdXma/VASfT3LvdlHaK1uHGYD
      czO3iWUyeBw2/r8f/YiLE2P84hev0zNyEYMGDFZD8xlAVZl9eJvFtR0GR0agnOXug2kOAzFO
      9pbxnYQw6SXevX2XCga8nY6PreND++v88v4yF8+OEvUfMDM3S0YWWF94wGEohSqnmJ6ZxdzZ
      j82k+53PHZ/4Beiy2gjn0qz6d7nm7eTd3S1QalRqDXKlPK0Wv9ZZXJwZ9BCLN21Pur3dpGMR
      JFMnY24dnX0TdHd58Iejj/vYO7tIx0PYOrvpsYj0jEwAcHtqika5QCaTQmkIFIoyB+E4bm2e
      46QMqFSqZQrFArFoGLmQJZFtJvv6PU6OoimOtuapKgLR41VWAnkymUzznVXThPOQ8B9g7ugk
      l00i1+rUKjlixTrx8AGC3k6hkKIY3WQzUiSTbepR4sF17q8ssRcNsrC5ysr2LKFIgLn1BRa2
      5vGfbDC1usRO2M/81hqr2zPEMk19VdS/wdTSAgexMPMbqyxvzxIK+5lbW2B+c56T4zXuryw3
      r72xxsrODPHTvsHjVe7Nz3AQizC7usTi5kOCoWNmVh7xaP0RvqMV7i7MsxcNMre6zNLmQ+Kp
      Zt+hkUnKVRWzfEzH0HV8h1sA7K7PURMkShiYHO4jlkwxNnaWcj5FtaGCIjM7v0oxm2Z2ZZVX
      nrvOo+VVQMUXS1K1eHg0O9VMcYtaBKVM9cl9CVVh7zCEQ8mzE86iMdpx6iEWT1MpVcjlC8w/
      muPay6+wvjT3sa5Ko8rcho9aPglAZ88gbqtE6GCdnNZDLHSA19tNJh6lXK3/3nn5iQAwapu6
      lu9e+TZr/h28FhP+dJKvX/4zUqlDai1uLxZCm9xeT/A//vtXCQT8VFQN18/3cxJN8t6jfV69
      dQaD4ePHAj/4t6qqzG4G+Nq5AQLBABaLnfF+J9uRMn/2Z3/K9sYyNBRyxQoWgxao88KL36MQ
      OeEoluHWxQmCkTChWAKDvqkmzBarlAtJkoU63R4v0eB+MwD0Lp6b7CdbrdNQBJ6bHMXnD5Eq
      qlybGKIg1zEZmpUdtSYHXreXaPgABcjnEzREE06jAVmto1XF5q+lUEVQTcilNIpowG40ISt1
      NIqI/gM9Tz5JXTDhNOkf9wVAqDRrbxVSKJIRh9HYbFdEdI/7pqipJjrNespqHa0i0Tz+d6pZ
      KiSpiyY6TKf3pUhoTvtWClFUczedDge5TBwEiXAkRL5cp5SJEzja4O25Hf7iu9/mrbd+xovf
      /k+4TRIIGhwuN4ZKgrKqIZpMYjQam7W8GgomNU9NEUmFfSRyZbS/a6tWFHn16y9yGI5jFcuc
      BEKMXX6OQirM5Vsv0aMrkKoIxKIxJN3HM+XVQgoEgZ2DIwL+E5an3iGpG+Y73/wa1UIWtaFS
      USRuXBjiJJL8vfPyEzXCZrfuIaNlrLOXmFzlUncvkYKMXAgiGrsZ7ez6NPMdaG4NKkpzSzGf
      jDC/uoWjw0UuLzPe38FJvMSNK+eIxpL09nhZW5wlkS1z5eZz2Axa9jeWOYmkmDh/CbVapdtt
      5cH8Fs9fO8vy5iGXL5xhZWmJsXNXUIpxYkU4O9JPKV1kb2sF0dJFt13Hys4RA51GMooNOXVC
      sQzXb95AKaVR9A6y4QMEcxe9bgdytsTm+hKunjHESpqjaIY+p46C5KKRC+LsGkUpxTkKRejt
      G0esppAsXrrsFvxre8iqiNlgpCwXUQUBi8lEsZBHlXTohQayAia9iUr5g3ZLUy5XKSArIlaj
      CVkuoCJgNZsofNCXOrIqYtIbm30RmssnSaLRKCMrAjazmVKpgArYzGby+RyqxoBerSGrAhaj
      +fTaYDNbMdqNiIYais6Ozahhf3edDu8wOzubfO3GLfK5BA1VZXNnF6PdjaGeJV2sceHSTZxW
      PYVMjGCmwpmBLlY3dxnudXKYUBh0SmQrIsP9PUTjUcxakeWtHWwd3Vw6M4q92366HFE53t+i
      onFQS/roHDnP0dYaAxMX0FTSBLN1rk6OsLy0xPj5K5j1GoQntsbD4Qh7u9uMDveyexCgb/Qs
      +loGwdyFpprCFytw89plNOLv3pL/QrVAHw2Az0qj3kBpISEFUEoXv5Q8QHQ/8q+/8PfwZeUB
      bF2t1QgTNWLL570/DIDPzpMB8Jn6tvMAbdp8nHYAtHmm+aPVAj0VzXrWrfEUGXpNi0uRVnfW
      oOlj1KoHkiCJT1cn7A/NF6Ce+GIDQODpJmKLfSWtpuX1aVlo7RyBKIl0jXz6DYKPoqoq1XK1
      5XFbfQYQBAG10VoAiLrWRXiCJLb+DPBUxlifpL0EavNM0w6ANs807QBo80zzhBaowdTae6yG
      jtEoBWZ3Z5BMPTj0Gu6vvc1uIsaIu+9Tr98+qgX6rKiKSjx4yDsPl5kY6uLdd96joTHictjY
      XVtgZnEVT5eHB/fvUhP0+PdXm5qS4RGoN8hGj/n57VkGPVZ+8d59zk6MIaDwzts/J5aRMQlV
      Hi4uY3N2sjR3j2wFulxOqkWZhw9v44/n6PO6eeuXP8E5cBaj2GBp9RHbx0F0SpHZlRVsHV6W
      p3+N4BjCbtBQLcS5MzdHvqIQ9G2yeXTCQH8/9VKKt+7dAY2RgG+DLZ+f/t4+5u7/nILeS6fF
      QK1axn+yQ0qWUIthfLEcDqeDgP+QdC6H027l2LdFWpagFMEXz2O3N32BTnybLG+ug6Rne2eV
      ha09zo6M4D/eZn7hIQm5wfHxHvObW5gos35whMfbh1YUOPZtMTt3l3xDx+bmEslChV6Pm2TY
      x9z6BvYOD1H/JksHQSrZMItra3T1jmA0aLh35zf4EzmMlLg3O4fB7sFu0rO19ohQtoTbZuIf
      fvLPTPR7ef/+PWqiCbfTht6ifzyHlGqev//7nzB5+RJiPc9bb71LNFMiGz3i3d/+BtFoY35u
      mobWRqfD8rmfI3jiF0Dg6sg1gvFjur1nsQgy8WKJmpwgVBbJpg8pt3jIvRWMNiex4DGHj94l
      UJLIF4qAyvzmDtdH7Pzk9Z9wnJTJ5wt4PV1EQ4FT7xmVh4urlItZRJ2JXPo0QaXUyWYKyOUK
      d+/fQVUbpPwrPDpIkc/nT7VASYI5iYR/l82tRTKlKoWaiiBp6bTbiUYjzG9scuvSOAvr62jU
      CulSU2tSykZJFsoEwgH8wSCxcIia2vQpKpcbVKp1DkIR7GRY214jlskRzzfdJkKHS7w7NcVm
      wM/DR3M8XLpL4MTHvdmHPJif4mhviXemHrJ2fMT0o0dML94hkmzafYTDASrFLJmqljO9LgwW
      FwD9g2epVyqMjUxwvr8DnamT+4+mqZVLNE4TlEPDk8jlGj12gVg6TyDULLp9b2YKValSKuXZ
      9odIxEOMjp2jnIlQqjUAlXQug1yWebS4yEs3rzKzsAzA3ekplGqZxbn7FBsKK4uznLn+PGur
      H9fzoKpM3blLnQZ1FepylpNwiuPjYy5cvUW1IRE7XOXM5avMTN37QubYEwHQ4Pv3fsz/9o2/
      YmbpXzB3v8T1LhuJUol6vUxdURH/gCd5zGYzCGC22RgYGmd3fYloLIaoQiZfpLPTzeDoBLvb
      ixjtXXgskJVrKOUs1Tr4jg9RJQOiADRqxJJZvvmnf042eoRGZ+bM+Ciru4f09fYTPN4+1QJ1
      cmW4g1ihTLZQoi6nicTCxJJxOjyDiEoJSRDIZHMYDDZMRv3j+03HQwxPXCWfDlNR9biMAslM
      mqrWyfdefZXt7WVQVUrlOsl0FpEq0VgMgHw2QQ0zLouBotpAr4inu2BlRCzI+QR1yYzLbKKo
      1tEpIjpNU9cUS+e4cmaISDLDw8U1Xrp+iWQqTrWUJC866DBK3J9f4+Wbl7FYOxhyqGyEmwZl
      1WKcht6DWojjHZxELqRJJOOYTRbGB/u4/+A2qiBxEgzz69++yc1v/AUeswZQeOWVf0c15qci
      aUhlMuj1emKJBE5XDyWdjaxcJxc9oVCuk02nESX9R79eVBRKlSrRkwOCoRAh/xGdwxcoF1Ik
      fGu4Rq7w4ivfJrK7gtbo+ELm2MelEIrMe+v30ertdOg1xIpZRrvGUQQtQjVJRXQw0dX7qXcn
      FeXppBD7G8sc+GOcv3KdVGCfju5+tncOuXVxjE1fhOuXz7OztoSjd4xsaJ+yaOXy+QlqpSpq
      QyEQDCI1Smwd+rGZtOhcIxirCRSji5FuJ8vrW1y4eJWwbwvR0sVQj5t8PMfayjyOrhF6XA4y
      iQjZQpqiaEfNR9BaPAy6rWwcnnBhfIS55UV0Ric3Ll1AVOusrq/QM3iWeiFKUhao5aOMnrnE
      4f42A8OTKHKCRAnODg9SLSTJY8Zl1pONRykoIk6rlUI+i4qA024jk06haowYhSqFhoTNYqFU
      aLY77A4kSaRaybJ56OfShYvEYlH6ur08mJvh6tkJypKFDrOBQDhIX08fpVyCnUCMK5OTSKJI
      KZ+gqrXjNEpsbK7g8AxwdLjLc1cus7a7x/lzlzBoIBiJk4weka/AhUs3cDtNnPh2kEUzE32d
      LG3sMNrnYi9WZ9xjIFGoMjEyQjAcwOvxsLq6wvDERRxmA1av7WNLmVDATzTow3vmGrH9Nezd
      IxhVGWvXAGI5zcL6HteuX8eo03zu26BfrBboKQOgVS1QpVhBbXGplo/nadRa0xG1mnv4MvMA
      LRsPGHUtJ+CeDIDPQjsP0KbN50g7ANo80/xxa4Fa/LUTRQFFbVFe3OLPOtCyF5FA60uRp6rV
      9RTeS4L0dPW6Wtke/yKsVP5oA0DSSK2bRYliy/oyvaW1YnVKQyEXzrY2KM3aua0gSmLLRlOi
      VmrZ37NRb0CrOR5VbWkyq6racu2330d7CdTmmaYdAG2eadoB0OaZ5hNaoAfr77MVDTLi6ePn
      Uz/A5b2AWSNSzPt5fXmGi31jn/riT6MFehpUReXB2z9mPaJiFwv8zWs/4+b1q6A2eO83vySS
      lakXk7z/1k/xZ2vMPpzlMBDk7Pgoqqoy9dYP2UppUNNHzK/v4nR3Y5QUZmcecH9mEbNOZWb6
      HsWKyOr6CsvrO0xOjFGIBfjle/fQ6AzMz91naXuPM+PjlLMBfvyrt9GbbGiraf6P197grMfM
      ncV1zFYnVpOBeu6Yv/uX21jtFo521rjzYJaJ8+cpJ4547VfvYTRb8R9uMDUzh96oZf7Bb1mP
      q0wOejk52mbm4W3Kxm5CG/d4f9XPxYlhFqdvs7ixRkkuc+f+DL5QmFohzuv//EO6J29hN2mI
      hQ74h9d/xY0L43z/7/47xp6zuCx6DndX+e3PXyeQq7C0tMxxKElvh5b//b/8P7z68ouoSp25
      h/d478403m4nf/2PP+bGzeuIwOs//jsqgomF6XcJx5IYdSLv3n2A1milw25B1IiPD8XP3nuP
      3ZMI3T09iGqZN9/4GTVJz8nWEttHQQxagdm5aXZ9ScaG+77oPIDAtdGb+EK77B7P4s+kyNYV
      UBXe3ZhDlmOf6+BfJOfOnqFYkvH0jWDSNLU6jXKe9YNjgv5jeoYnqSk6Xrw6RjqVJJPJP+47
      eXaCYqnM3PwSunqeYCyDoNHR1WEjnc3j9XpJRqPoHB4G3RY0hqZlx+HKQ2o6G36/j2QmTzHs
      J15TAQmX3UYoGmN6ZZ0+t425pWVMBgF/pKlTqikS3k4zoUiCseEBFEFCAhA0dNrNBCNxujrd
      JDM5+vrHqVTglRvnAfB6PcRicRQ5SaQoQb3pUl0u5cmk01QUhUwmRSaX59z5K1hcffTZmg+/
      3QOj6IUags7EWL+HymnycWTiEopk5EKvmVJDy8H+BnfvTzM01H36KUmMjw6hCBIuTx8Oo/h4
      38Ht6iJXyODp9JCIhnk094iGRuLYH/j4l6QqrKysUYiHyRSr5I5X8BVEfD4f82trlJIhsHRh
      FuuYrC0WxvhXeCIAFH5w9wf8z1//K0LpBEothT9xQjTjp9yosx/epdhidvYPi8rJyQmRUIBY
      NEw0GiUSDrB7EsPT0UG9nCcdOwTHEEI+isU7jNKQT79AlZPjE8KhAF1dXRjMBoInPta3dyjW
      RIwahWA4zpmzoxyu3OON91a4cLb5q9g9OIakKmRyeb52/Rp6l5uC+5YBAAAMGklEQVR67JCk
      DP19vaTTYTqsDnxHhzgdTtCYSMSbRmCqaGC4v5dkPMg//Oh1rl+5RPh4l3RVor+vl1QqQqYg
      47ZpSaai5CU79tPKh9F4iotnRtjzRTBINfaP/Wxtb5AqlBkd6iN0uIXVO4xSkznamGbw/Nce
      f1KpWIRoNEIsFiMQDBMIBtnYWCMb3kbrnqCn/wyXRj10e3vp7OjEv79LJJUHtcrf/P1r3Lxx
      hVwq3vyMIxE2dnbxdPegaDR0uL2YpToWVxcaSU8yEX3iexLxeLvQiXVOjvZI0kGHHrLpBN3u
      LoyaOvd/+1M2kxpGB1o7bfev8YQWqMRvlu9gMrt4fvw50ikfGqONRLHEhKeXg8gho97RT33x
      p5FCPA2NWp1ENEpdbdYDK5ZkKoUUor0Pj0VCroNFL9EQtOi1Ipl0Cq3BgtmoR1EaJGJR6oh0
      dnSQyWRRyhlqRg8mykh6MzqxacLltJtJpjJIOgMuu41sKEM+l0FvslKV84haE0H/AUMjExRy
      GSw2JzqNhFyWMegNZDIprPYONKKARieSTKWwO5zkMmnqCiSTMcYnzpDLZLDanZQLWRRJh82k
      p1IHo16LKInU62VypQqdrg5EVErlMgeHR5w7M046m8fZ0UE+k0JntCKqdbR6I5IoIGolqrUi
      +WIZk9mMXCwiSBKRSIzJiVFUSYtWhEQiicPViVYSKcklTEYTjXqNRCxOXQGrxUg+X4R6nrzq
      pMehpSFo0IkqxapCh91KNpPCaHGg10pIes3jbdB6rUK2IJMO++keO4daziPoTBgklXRexmrU
      kM4W0JssOG2WlvMWv48/Wi3Q09CoNVrOA7R6v0+bB2h1P/7fYh7gowHwWfm8A6C9C9TmmaYd
      AG2eaf5opRBPgyAKLS+BWk21i4KIzqxrbVAEpKfQ5LRarkiUhNb1VpLY8hJIEFob9/OWQcBX
      9BngaWj5DLOqQotvVVXVls8vNGtffb5+mZ+23x+8ztcXQHsJ1OaZph0AbZ5p2gHQ5pnmCS1Q
      jbsr7zJ9sIaOInO+TZy2HoxinZ/N/gtroUPO9kx8ameIL0sL9HlxtLPOzNQdauZu3HYdr/3T
      35GtQD58yNT0LBq9mfmFeda3Dzg7PvLhg7dSZ372IT/68RtcvvU18uF93r4zRTRTZWfpAasb
      W/SNTPDWD/5PMpYR+jrM1EsZ/tv/+7eMXbrCW2/8iGi2TP9AL3U5xz/+9X+l59zz7C7dZ2pm
      Ho1S5v70NFWNA6/LSix4wPd/+hsujffwLz//NYFEjtHBPtRGlb/5r/8F2+AZ3vzR9xEMVpZm
      3iMYjuPuHUInfXjIpJRN8PDhFL+584gbVy/g213n4YP7lOoSW5ur/Pq9KQxqkTf++cf0nL+J
      zSB9FZ8BNEz2jlKpN3i4M4uuUSBWaNYFS+QSJHLJp/Ax/rdHd4+XWDSKKGlAaWC1OomEIyzv
      HvGtb95idfeE8b4O6soTE0HUcPXaZVxdPZgkSMVCSGYX2xtLJJMJkskkhxuzaG0uCnLzMLxk
      sNHdYaKuqlhsFmKRCIoKWoOVrk4z1QZ4uzzEEinm17b57n/4LusLMwB4ekfQNEqE9pbpmXyR
      mN8HwPLMXTq83cilEla7i3A0htVsIxWPUX3iodtk72TAZWDi0nUAurzdJKNR9HYPYy4N4xef
      4+KV6xgcXfRYW3XB/uPj4wGglvnbu2/wjQsv0m1347I62A1ssRHcRdQ70IkNGv+G/6J/VhKp
      PNcvjrO3u8fOYZDxc+cpZhM4jHpW17axaSu8/s4yLzx39RN9l6be48qL3yIROsLSe54+u4Sr
      s4eqKuCx6UjJEuVcglAwDECjKpPKZEikEoyMnEPJpzk+OSCRLZBKZUkmE5Sq0GXTYDEaWV5c
      wuHpB6CYS5POZBBNDsJHmwhaPbu720h6K6mwn0AwwcWrV4iHA/QOjWCTysTyT7pQqDxYPODF
      K2Ps7GyTSOe4cH6MQCDEnYUDvn59nMPVaYYvvfBFuJR/aXx8G1StcRD1gahj0NVDMBWh1+mh
      UKuh1ArUBQNuq+MP4gv0ZfHRJVs+kySRKWEUZCqGLkxqAcFgw2nWEYom8Lod+E5CaI0WBnu9
      H9sGzWYz2OwO1pcXGT17jlgkQm//IOV8inxFpburk0alRAUtJp2GaiHHcTCC3mzFolWpCQYi
      /kNGJyYIhyLoTVb0QpWGZMLbaScQDNPT14ckCmTTcRLpPE53Fw05h8nmYmd7i2tXr1KRCwha
      A4lIAJurG6oFcmWFXq8b+Og2qEImm8duNbO4vM7ESD+JbImB/l7y+TwOu51CLovBYntcb+ur
      sARq5wGeoJ0H+PT9vgoB0N4FavNM0w6ANs80X0kt0JeBIAioQuu+QC3aGAGt656+Uk+zLdIO
      gCd4mnWtILXWV1VVRKE1DyRVUVsX/j2FN+hXhWf73bd55mkHQJtnmnYAtHmmeUILVOfeyrvM
      +baQSxFmdmZxdIxilhSmt+8xe7TJmZ7xZ0YL9AflsY6oxqPpad746c+5dPMW1UyIX/3mXdIl
      heWZd4mlClCXWViYIZGX6O1ykgj5eO0X73B5cow3f/xPaNyjuCx6VKXGP/31/4W1f4Jf/PMP
      UfUWDtbnWVpawTN0FpNO/Nx9dv6t8cQvgMT5gTPk5QJ7ER+TnXbu7G8jSjq6bA5i2eSXc5fP
      EqKWa9cvYXN5MEqwu7bIxK1XONpbRStpSSVTuPtGMIsNaqdu1A5PDw05C5KWHpeZfLnpg7T+
      6D4Gm51CMY9WbyGRTBOLRkklY1RaLJD9VeMJLVCFf7z3U/785nf59sVv4ouHGLBb2Iscojd4
      0NGsE9bmi2X54R0uv/ANkuFjRKONoO8AjdbM5OXrCOUUt3/1BlnTCNcmBwBo1KrIsoxcriCX
      yxRLRY6ODqihIxcPEQwmef6Vlwke75Ov1pnosRHLlb/cN/lHwhO+QFVWTzZQRQP9DicJucao
      q5OULJPLR9AZPfQ5O7/SWqAvA1VVP1ZbIJGI4+p0s/RolvNXbxDyHeDpG6aYDCELRsxiBX8k
      gadnkJ5OJ/HQCcFoik6Ph1Q8hqg3UchmeO7WLeRCBkFvJni0h6tnGE2jQChZYmJ0EFFs/Tzx
      V4W2FuiPgCcD4DP1fZo8QDsA2rtAbZ5t2gHQ5pmmLYX4vHjKvYH2dvGXQzsA/hhQgVZ3155G
      z/NspwCA9hKozTNOOwDaPNO0A6DNM80TWqAqU2t3WQrs02nU8M8L73N5YBK1UWF65x4/W36f
      q8NXkdpaoH8Fhfnp+zyYW2F8cgI5FeI3790nkZPxbS2yurmHTiOwMD9NrmbE22mjXi7w/e//
      iKHJc6zPPeDh/BrjkxNU00Fe/+U7aAwWNhcfsL59gFRN8f6jTax2B3aL6fEZBrWS4Qev/QxF
      Y8Dr7mBnZY65hSVEk5XfvPkGdY2JVOiABw9m6B2bRK/5apzrfRqe+AXQ4XXYCGdimC0eysV4
      80WSnlsjlzHr7GiecfHUp0Pg/MWLZBNxGipUChkS6SzBcJRgIEg8GsLu9lLOpMiXmvW8BFGH
      QWxQVeDcxQtkEwkUoCIXEVSBfKFEMBgkHg2TzpUQlQrFcuNjo1bLMkiQzTfrncXCIXKFNIlY
      mLqiJZvL4+3qIhYJ05YCNfl4ANRLWB3j6BtFFFGDoipUKzn86Rj3V37LS5e/1944+DSoDX70
      gx/zF//Lf6aainB4fMzw+WsUMjFkRaDXqeckmuXFl7/GydEhAIIkIQnQaNR47bXX+Yv//JfI
      iRAl0c6f/unX2dlYpaJKdNm06NyjfOvFCywtrn18WI2J737nOxxtbxLwnxBKZrhx+SzBSIbv
      /Ic/x7e7jiKZON9nJZBua4HgE75ADVaPFjDbBjAoWQ6SUfpcgxj0FmhU6Ono+UwXf6akEB/9
      i6rUWZqfp1BREASFqzdvcbi5SvfIJEohTqygMuA2sb57zNVr1zFoRYqpKAtr21gcLpRSllIV
      oMG169fY2dhgZPIilXSIRElgtNfJysYBV65fRSeJiKe2KKpSZ21lme7hM2yvr3Dz6kXWtw+5
      dPkiO2tLeIcnkZN+krLElQsTCELrtihfFdpaoM+Lp1hSqKqKUm/86y/8XQjC4wD47H3bAdDe
      BWrzTNMOgDbPNP8/38MLLuvHKCkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hour' width='192'>
      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
      DyAzrwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Moving Average' width='192'>
      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
    </thumbnail>
    <thumbnail height='55' name='Total Rides' width='192'>
      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
      /w/7MKVkDegfvAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Weather' width='192'>
      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
      zHNA24AAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
